<!--  Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information.  -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="https://schemas.animasterstudios.com/lib/ui/wpf/modern"
    xmlns:primitives="https://schemas.animasterstudios.com/lib/ui/wpf/modern"
    xmlns:ui="https://schemas.animasterstudios.com/lib/ui/wpf/modern">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Inkore.UI.WPF.Modern;component/Styles/Button.xaml" />
        <ResourceDictionary>
            <ui:BindingProxy x:Key="OverlayCornerRadiusProxy" Value="{DynamicResource OverlayCornerRadius}" />
            <ui:CornerRadiusFilterConverter x:Key="RightCornerRadiusFilterConverter" Filter="Right" />
            <ui:CornerRadiusFilterConverter x:Key="TopLeftCornerRadiusDoubleValueConverter" Filter="TopLeftValue" />
            <ui:CornerRadiusFilterConverter x:Key="BottomRightCornerRadiusDoubleValueConverter" Filter="BottomRightValue" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultContentControlStyle" TargetType="ContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <ContentPresenter
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MUX_NavigationViewItemPresenterStyleWhenOnLeftPane" TargetType="primitives:NavigationViewItemPresenter">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource NavigationViewItemBorderThickness}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Border
                        x:Name="LayoutRoot"
                        MinHeight="{DynamicResource NavigationViewItemOnLeftMinHeight}"
                        Margin="{DynamicResource NavigationViewItemButtonMargin}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Border.Resources>
                            <Storyboard x:Key="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="0.0"
                                    To="180.0"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="180.0"
                                    To="0.0"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </Border.Resources>

                        <Grid x:Name="PresenterContentRootGrid">
                            <!--  Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation.  -->
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Center">

                                <Rectangle
                                    x:Name="SelectionIndicator"
                                    Width="{DynamicResource NavigationViewSelectionIndicatorWidth}"
                                    Height="{DynamicResource NavigationViewSelectionIndicatorHeight}"
                                    Fill="{DynamicResource NavigationViewSelectionIndicatorForeground}"
                                    Opacity="0.0"
                                    RadiusX="{DynamicResource NavigationViewSelectionIndicatorRadius}"
                                    RadiusY="{DynamicResource NavigationViewSelectionIndicatorRadius}" />
                            </Grid>

                            <Grid
                                x:Name="ContentGrid"
                                MinHeight="{DynamicResource NavigationViewItemOnLeftMinHeight}"
                                Margin="0,0,14,0"
                                HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="IconColumn" ui:ColumnDefinitionHelper.PixelWidth="{DynamicResource NavigationViewCompactPaneLength}" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Viewbox
                                    x:Name="IconBox"
                                    Height="{DynamicResource NavigationViewItemOnLeftIconBoxHeight}"
                                    Margin="{DynamicResource NavigationViewItemOnLeftIconBoxMargin}"
                                    HorizontalAlignment="Center">
                                    <ui:ContentPresenterEx
                                        x:Name="Icon"
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding Foreground}" />
                                </Viewbox>

                                <!--  Padding="{TemplateBinding Padding}"  -->
                                <ui:ContentPresenterEx
                                    x:Name="ContentPresenter"
                                    Grid.Column="1"
                                    Margin="{DynamicResource NavigationViewItemContentPresenterMargin}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    TextElement.Foreground="{TemplateBinding Foreground}" />

                                <Grid
                                    x:Name="ExpandCollapseChevron"
                                    Grid.Column="3"
                                    Width="40"
                                    Margin="{DynamicResource NavigationViewItemExpandChevronMargin}"
                                    HorizontalAlignment="Right"
                                    Background="Transparent"
                                    Visibility="Collapsed">
                                    <ui:FontIcon
                                        x:Name="ExpandCollapseChevronIcon"
                                        Width="12"
                                        Height="12"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="{DynamicResource FluentSystemIcons}"
                                        FontSize="{DynamicResource NavigationViewItemExpandedGlyphFontSize}"
                                        Foreground="{DynamicResource NavigationViewItemForeground}"
                                        Glyph="{DynamicResource NavigationViewItemExpandedGlyph}"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <ui:FontIcon.RenderTransform>
                                            <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                        </ui:FontIcon.RenderTransform>
                                    </ui:FontIcon>
                                </Grid>

                                <ContentPresenter
                                    x:Name="InfoBadgePresenter"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding InfoBadge}" />

                            </Grid>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PointerStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="PointerOverSelected" />
                                <VisualState x:Name="PressedSelected" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisabledStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="DisabledStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="IconVisible" />
                                <VisualState x:Name="IconCollapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IconBox" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IconColumn" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>8</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="InfoBadgeStates">
                                <VisualState x:Name="InfoBadgeVisible" />
                                <VisualState x:Name="InfoBadgeCollapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InfoBadgePresenter" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneAndTopLevelItemStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PaneAndTopLevelItemStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="NotClosedCompactAndTopLevelItem" />
                                <VisualState x:Name="ClosedCompactAndTopLevelItem" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="Selected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PointerOverSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPointerOver}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PressedSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPressed}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundSelectedPressed}" />
                        </Trigger>

                        <Trigger SourceName="DisabledStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
                        </Trigger>

                        <Trigger SourceName="PaneAndTopLevelItemStatesListener" Property="CurrentStateName" Value="ClosedCompactAndTopLevelItem">
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="{DynamicResource NavigationViewCompactItemContentPresenterMargin}" />
                            <Setter TargetName="ContentGrid" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="InfoBadgePresenter" Property="Grid.Column" Value="0" />
                            <Setter TargetName="InfoBadgePresenter" Property="Grid.ColumnSpan" Value="4" />
                            <Setter TargetName="InfoBadgePresenter" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="InfoBadgePresenter" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="InfoBadgePresenter" Property="Margin" Value="0,2,2,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MUX_NavigationViewSettingsItemStyleWhenOnTopPane" TargetType="local:NavigationViewItem">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItem">
                    <Border
                        x:Name="LayoutRoot"
                        Width="{DynamicResource TopNavigationViewSettingsButtonHeight}"
                        Height="{DynamicResource TopNavigationViewSettingsButtonHeight}"
                        Margin="{DynamicResource NavigationViewItemButtonMargin}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <Rectangle x:Name="PointerRectangle" Fill="Transparent" />
                            <Grid x:Name="ContentGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="IconRow" Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Viewbox
                                    x:Name="IconBox"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Height="16"
                                    Margin="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    <ui:ContentPresenterEx
                                        x:Name="Icon"
                                        Content="{TemplateBinding Icon}"
                                        TextElement.Foreground="{TemplateBinding Foreground}" />
                                </Viewbox>
                                <ContentPresenter
                                    x:Name="InfoBadgePresenter"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding InfoBadge}" />
                            </Grid>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PointerStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="PointerOverSelected" />
                                <VisualState x:Name="PressedSelected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="DisabledStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="Selected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelected}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PointerOverSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PressedSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                        </Trigger>
                        <Trigger SourceName="DisabledStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPane" TargetType="primitives:NavigationViewItemPresenter">
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForeground}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Border
                        x:Name="LayoutRoot"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <Border.Resources>
                            <Storyboard x:Key="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="0.0"
                                    To="180.0"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="180.0"
                                    To="0.0"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </Border.Resources>
                        <Grid>
                            <Rectangle
                                x:Name="PointerRectangle"
                                Fill="Transparent"
                                Visibility="Collapsed" />
                            <Grid x:Name="ContentGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Viewbox
                                    x:Name="IconBox"
                                    Width="16"
                                    Height="16"
                                    Margin="12,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    <ui:ContentPresenterEx
                                        x:Name="Icon"
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding Foreground}" />
                                </Viewbox>
                                <ui:ContentPresenterEx
                                    x:Name="ContentPresenter"
                                    Grid.Column="1"
                                    Margin="{DynamicResource TopNavigationViewItemContentPresenterMargin}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    Foreground="{TemplateBinding Foreground}"
                                    TextWrapping="NoWrap" />
                                <Grid
                                    x:Name="ExpandCollapseChevron"
                                    Grid.Column="2"
                                    Width="40"
                                    Margin="{DynamicResource TopNavigationViewItemExpandChevronMargin}"
                                    HorizontalAlignment="Right"
                                    Background="Transparent"
                                    Visibility="Collapsed">
                                    <ui:FontIcon
                                        x:Name="ExpandCollapseChevronIcon"
                                        Width="12"
                                        Height="12"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="{DynamicResource FluentSystemIcons}"
                                        FontSize="{DynamicResource NavigationViewItemExpandedGlyphFontSize}"
                                        Foreground="{DynamicResource NavigationViewItemForeground}"
                                        Glyph="{DynamicResource NavigationViewItemExpandedGlyph}"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <ui:FontIcon.RenderTransform>
                                            <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" />
                                        </ui:FontIcon.RenderTransform>
                                    </ui:FontIcon>
                                </Grid>
                                <ContentPresenter
                                    x:Name="InfoBadgePresenter"
                                    Grid.Column="3"
                                    Margin="-16,0,2,13"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding InfoBadge}" />
                            </Grid>
                            <Grid
                                x:Name="SelectionIndicatorGrid"
                                Margin="16,0,16,4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom">
                                <Rectangle
                                    x:Name="SelectionIndicator"
                                    Width="16"
                                    Height="3"
                                    Fill="{DynamicResource NavigationViewSelectionIndicatorForeground}"
                                    Opacity="0"
                                    RadiusX="2"
                                    RadiusY="2" />
                            </Grid>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PointerStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="PointerOverSelected" />
                                <VisualState x:Name="PressedSelected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="DisabledStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="NavigationViewIconPositionStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly" />
                                <VisualState x:Name="ContentOnly" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InfoBadgeStates">
                                <VisualState x:Name="InfoBadgeVisible" />
                                <VisualState x:Name="InfoBadgeCollapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InfoBadgePresenter" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPointerOver}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundPressed}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="Selected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelected}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PointerOverSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelectedPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelectedPointerOver}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PressedSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TopNavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="PointerRectangle" Property="Fill" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelectedPressed}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundSelectedPressed}" />
                        </Trigger>
                        <Trigger SourceName="DisabledStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                        </Trigger>
                        <Trigger SourceName="NavigationViewIconPositionStatesListener" Property="CurrentStateName" Value="IconOnly">
                            <Setter TargetName="LayoutRoot" Property="Width" Value="36" />
                            <Setter TargetName="LayoutRoot" Property="Height" Value="36" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="2" />
                            <Setter TargetName="IconBox" Property="Margin" Value="10,0" />
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="SelectionIndicatorGrid" Property="Margin" Value="0" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Margin" Value="{DynamicResource TopNavigationViewItemIconOnlyExpandChevronMargin}" />
                        </Trigger>
                        <Trigger SourceName="NavigationViewIconPositionStatesListener" Property="CurrentStateName" Value="ContentOnly">
                            <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="{DynamicResource TopNavigationViewItemContentOnlyContentPresenterMargin}" />
                            <Setter TargetName="SelectionIndicatorGrid" Property="Margin" Value="12,0,12,4" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Margin" Value="{DynamicResource TopNavigationViewItemContentOnlyExpandChevronMargin}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow" TargetType="primitives:NavigationViewItemPresenter">
        <Setter Property="Foreground" Value="{DynamicResource TopNavigationViewItemForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid
                        x:Name="LayoutRoot"
                        Height="36"
                        Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <Storyboard x:Key="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="0.0"
                                    To="180.0"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                            <Storyboard x:Key="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="180.0"
                                    To="0.0"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </Grid.Resources>
                        <Grid x:Name="PresenterContentRootGrid">
                            <!--  Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation.  -->
                            <Grid
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">

                                <Rectangle
                                    x:Name="SelectionIndicator"
                                    Width="2"
                                    Height="24"
                                    Fill="{DynamicResource NavigationViewSelectionIndicatorForeground}"
                                    Opacity="0.0"
                                    RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                    RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                            </Grid>
                            <Grid x:Name="ContentGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Viewbox
                                    x:Name="IconBox"
                                    Width="16"
                                    Height="16"
                                    Margin="16,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    <ui:ContentPresenterEx
                                        x:Name="Icon"
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding Foreground}" />
                                </Viewbox>
                                <ui:ContentPresenterEx
                                    x:Name="ContentPresenter"
                                    Grid.Column="1"
                                    Margin="{DynamicResource TopNavigationViewItemOnOverflowContentPresenterMargin}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    Foreground="{TemplateBinding Foreground}"
                                    TextWrapping="NoWrap" />
                                <Border
                                    x:Name="ExpandCollapseChevron"
                                    Grid.Column="3"
                                    Width="40"
                                    Margin="{DynamicResource TopNavigationViewItemOnOverflowExpandChevronMargin}"
                                    Padding="{DynamicResource TopNavigationViewItemOnOverflowExpandChevronPadding}"
                                    HorizontalAlignment="Right"
                                    Background="Transparent"
                                    Visibility="Collapsed">
                                    <ui:FontIcon
                                        Width="12"
                                        Height="12"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="{DynamicResource FluentSystemIcons}"
                                        FontSize="{DynamicResource NavigationViewItemExpandedGlyphFontSize}"
                                        Foreground="{DynamicResource NavigationViewItemForeground}"
                                        Glyph="{DynamicResource NavigationViewItemExpandedGlyph}"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <ui:FontIcon.RenderTransform>
                                            <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" />
                                        </ui:FontIcon.RenderTransform>
                                    </ui:FontIcon>
                                </Border>
                                <ContentPresenter
                                    x:Name="InfoBadgePresenter"
                                    Grid.Column="2"
                                    Margin="0,0,16,0"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding InfoBadge}" />
                            </Grid>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PointerStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="PointerOverSelected" />
                                <VisualState x:Name="PressedSelected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="DisabledStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="NavigationViewIconPositionStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly" />
                                <VisualState x:Name="ContentOnly" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InfoBadgeStates">
                                <VisualState x:Name="InfoBadgeVisible" />
                                <VisualState x:Name="InfoBadgeCollapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InfoBadgePresenter" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="Selected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelected}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundSelected}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PointerOverSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPointerOver}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPointerOver}" />
                        </Trigger>
                        <Trigger SourceName="PointerStatesListener" Property="CurrentStateName" Value="PressedSelected">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationViewItemBackgroundSelectedPressed}" />
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource NavigationViewItemForegroundPressed}" />
                        </Trigger>
                        <Trigger SourceName="DisabledStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TopNavigationViewItemForegroundDisabled}" />
                        </Trigger>
                        <Trigger SourceName="NavigationViewIconPositionStatesListener" Property="CurrentStateName" Value="ContentOnly">
                            <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="{DynamicResource TopNavigationViewItemOnOverflowNoIconContentPresenterMargin}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewStyle1" TargetType="local:NavigationView">
        <Setter Property="PaneToggleButtonStyle" Value="{DynamicResource PaneToggleButtonStyle}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="CompactPaneLength" Value="{DynamicResource NavigationViewCompactPaneLength}" />
        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationView">
                    <Grid x:Name="RootGrid" KeyboardNavigation.TabNavigation="Local">
                        <Grid.Resources>
                            <ui:BindingProxy x:Key="RootSplitViewProxy" Value="{x:Reference RootSplitView}" />
                        </Grid.Resources>

                        <!--  Shadow  -->
                        <ui:ThemeShadowChrome
                            x:Name="ShadowCaster"
                            Grid.RowSpan="2"
                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneWidth}"
                            HorizontalAlignment="Left">
                            <ui:ThemeShadowChrome.RenderTransform>
                                <TranslateTransform x:Name="ShadowCasterTransform" />
                            </ui:ThemeShadowChrome.RenderTransform>
                        </ui:ThemeShadowChrome>

                        <!--  Button grid  -->
                        <Grid
                            x:Name="PaneToggleButtonGrid"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Canvas.ZIndex="100"
                            KeyboardNavigation.TabIndex="0"
                            KeyboardNavigation.TabNavigation="Local">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid x:Name="TogglePaneTopPadding" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />

                            <Grid
                                x:Name="ButtonHolderGrid"
                                Grid.Row="1"
                                Margin="{DynamicResource NavigationViewButtonHolderGridMargin}">
                                <Button
                                    x:Name="NavigationViewBackButton"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
                                    VerticalAlignment="Top"
                                    IsEnabled="{TemplateBinding IsBackEnabled}"
                                    Style="{DynamicResource NavigationBackButtonNormalStyle}"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewBackButtonToolTip" />
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button
                                    x:Name="NavigationViewCloseButton"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
                                    VerticalAlignment="Top"
                                    Style="{DynamicResource NavigationBackButtonNormalStyle}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewCloseButtonToolTip" />
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button
                                    x:Name="TogglePaneButton"
                                    MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    ui:FocusVisualHelper.FocusVisualMargin="0"
                                    Style="{TemplateBinding PaneToggleButtonStyle}"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}">
                                    <TextBlock
                                        x:Name="PaneTitleTextBlock"
                                        Grid.Column="0"
                                        Margin="0,-2,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Style="{DynamicResource NavigationViewItemHeaderTextStyle}"
                                        Text="{TemplateBinding PaneTitle}" />
                                </Button>
                                <Grid
                                    x:Name="PaneTitleHolder"
                                    Height="40"
                                    Visibility="Collapsed">
                                    <ContentControl
                                        x:Name="PaneTitlePresenter"
                                        Margin="{DynamicResource NavigationViewPaneTitlePresenterMargin}"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        IsTabStop="False"
                                        Style="{StaticResource DefaultContentControlStyle}" />
                                </Grid>
                            </Grid>
                        </Grid>

                        <!--  Content layouts  -->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="48" />
                            </Grid.RowDefinitions>

                            <!--  DisplayMode top  -->
                            <StackPanel
                                x:Name="TopNavArea"
                                Grid.Row="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                Background="{DynamicResource NavigationViewTopPaneBackground}"
                                Canvas.ZIndex="1">

                                <Grid
                                    x:Name="TopNavTopPadding"
                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}" />

                                <Border
                                    x:Name="TopNavBorder"
                                    Height="{DynamicResource NavigationViewTopPaneHeight}"
                                    Margin="{DynamicResource TopNavigationViewTopNavGridMargin}"
                                    BorderBrush="{DynamicResource NavigationViewItemSeparatorForeground}"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}">
                                    <Grid x:Name="TopNavGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav" ui:ColumnDefinitionHelper.PixelWidth="{DynamicResource NavigationBackButtonWidth}" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" MinWidth="{DynamicResource TopNavigationViewPaneCustomContentMinWidth}" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Grid
                                            x:Name="TopNavLeftPadding"
                                            Grid.Column="1"
                                            Width="0" />

                                        <ContentControl
                                            x:Name="PaneHeaderOnTopPane"
                                            Grid.Column="2"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            IsTabStop="False"
                                            Style="{StaticResource DefaultContentControlStyle}" />

                                        <!--  Margin="{DynamicResource NavigationViewItemInnerHeaderMargin}"  -->
                                        <ContentControl
                                            x:Name="PaneTitleOnTopPane"
                                            Grid.Column="2"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            IsTabStop="False"
                                            Style="{StaticResource DefaultContentControlStyle}" />

                                        <!--  Top nav ItemsRepeater  -->
                                        <local:ItemsRepeaterScrollHost Grid.Column="3">
                                            <ui:ScrollViewerEx HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                                <local:ItemsRepeater x:Name="TopNavMenuItemsHost" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}">
                                                    <local:ItemsRepeater.Layout>
                                                        <local:StackLayout Orientation="Horizontal" />
                                                    </local:ItemsRepeater.Layout>
                                                </local:ItemsRepeater>
                                            </ui:ScrollViewerEx>
                                        </local:ItemsRepeaterScrollHost>

                                        <Button
                                            x:Name="TopNavOverflowButton"
                                            Grid.Column="4"
                                            Margin="{DynamicResource TopNavigationViewOverflowButtonMargin}"
                                            Content="More"
                                            Style="{DynamicResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">

                                            <local:FlyoutService.Flyout>
                                                <local:Flyout Placement="BottomEdgeAlignedRight">
                                                    <local:Flyout.FlyoutPresenterStyle>
                                                        <Style TargetType="local:FlyoutPresenter">
                                                            <Setter Property="Padding" Value="{DynamicResource TopNavigationViewOverflowMenuPadding}" />
                                                            <!--  Set negative top margin to make the flyout align exactly with the button  -->
                                                            <Setter Property="Margin" Value="0,-4,0,0" />
                                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                                            <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="local:FlyoutPresenter">
                                                                        <ui:ScrollViewerEx
                                                                            x:Name="ScrollViewer"
                                                                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                                            <Border
                                                                                Padding="{TemplateBinding Padding}"
                                                                                Background="{TemplateBinding Background}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                CornerRadius="{TemplateBinding CornerRadius}">
                                                                                <ui:ContentPresenterEx
                                                                                    x:Name="ContentPresenter"
                                                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                                            </Border>
                                                                        </ui:ScrollViewerEx>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </local:Flyout.FlyoutPresenterStyle>
                                                    <local:ItemsRepeaterScrollHost>
                                                        <ui:ScrollViewerEx VerticalScrollBarVisibility="Auto">
                                                            <local:ItemsRepeater x:Name="TopNavMenuItemsOverflowHost" />
                                                        </ui:ScrollViewerEx>
                                                    </local:ItemsRepeaterScrollHost>
                                                </local:Flyout>
                                            </local:FlyoutService.Flyout>
                                        </Button>

                                        <ContentControl
                                            x:Name="PaneCustomContentOnTopPane"
                                            Grid.Column="5"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            IsTabStop="False"
                                            Style="{StaticResource DefaultContentControlStyle}" />

                                        <Grid
                                            x:Name="TopPaneAutoSuggestArea"
                                            Grid.Column="6"
                                            Height="{DynamicResource NavigationViewTopPaneHeight}">

                                            <ContentControl
                                                x:Name="TopPaneAutoSuggestBoxPresenter"
                                                MinWidth="216"
                                                Margin="{DynamicResource TopNavigationViewAutoSuggestBoxMargin}"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Center"
                                                IsTabStop="False"
                                                Style="{StaticResource DefaultContentControlStyle}" />
                                        </Grid>

                                        <ContentControl
                                            x:Name="PaneFooterOnTopPane"
                                            Grid.Column="7"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            IsTabStop="False"
                                            Style="{StaticResource DefaultContentControlStyle}" />
                                        <!--  Top footer menu ItemsRepeater  -->
                                        <local:ItemsRepeater x:Name="TopFooterMenuItemsHost" Grid.Column="8">
                                            <local:ItemsRepeater.Layout>
                                                <local:StackLayout Orientation="Horizontal" />
                                            </local:ItemsRepeater.Layout>
                                        </local:ItemsRepeater>

                                    </Grid>
                                </Border>
                                <Border x:Name="TopNavContentOverlayAreaGrid" ui:DecoratorHelper.Child="{TemplateBinding ContentOverlay}" />
                            </StackPanel>

                            <!--  Displaymode (compact/minimal/normal) left  -->
                            <local:SplitView
                                x:Name="RootSplitView"
                                Grid.Row="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource NavigationViewItemSeparatorForeground}"
                                BorderThickness="{DynamicResource NavigationViewBorderThickness}"
                                CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                CornerRadius="{Binding Value, Source={StaticResource OverlayCornerRadiusProxy}, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                                DisplayMode="Inline"
                                IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
                                IsTabStop="False"
                                OpenPaneLength="{TemplateBinding OpenPaneLength}"
                                PaneBackground="{DynamicResource NavigationViewDefaultPaneBackground}">

                                <local:SplitView.Pane>
                                    <Border
                                        x:Name="PaneContentBorder"
                                        Margin="{DynamicResource NavigationViewPaneContentGridMargin}"
                                        HorizontalAlignment="Left"
                                        BorderBrush="{DynamicResource NavigationViewItemSeparatorForeground}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
                                        <Grid x:Name="PaneContentGrid">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="0" />
                                                <!--  above button margin + back button space  -->
                                                <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="0" />
                                                <!--  above list margin  -->
                                                <RowDefinition x:Name="ItemsContainerRow" Height="*" />
                                            </Grid.RowDefinitions>

                                            <Grid x:Name="ContentPaneTopPadding" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />

                                            <Grid Grid.Row="2">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition x:Name="PaneHeaderContentBorderRow" />
                                                </Grid.RowDefinitions>

                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition x:Name="PaneHeaderCloseButtonColumn" />
                                                    <ColumnDefinition x:Name="PaneHeaderToggleButtonColumn" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>

                                                <ContentControl
                                                    x:Name="PaneHeaderContentBorder"
                                                    Grid.Column="2"
                                                    HorizontalContentAlignment="Stretch"
                                                    VerticalContentAlignment="Stretch"
                                                    IsTabStop="False"
                                                    Style="{StaticResource DefaultContentControlStyle}" />
                                            </Grid>

                                            <Grid
                                                x:Name="AutoSuggestArea"
                                                Grid.Row="3"
                                                Height="{DynamicResource NavigationViewTopPaneHeight}"
                                                Margin="0,0,0,8"
                                                VerticalAlignment="Center">

                                                <ContentControl
                                                    x:Name="PaneAutoSuggestBoxPresenter"
                                                    Margin="{DynamicResource NavigationViewAutoSuggestBoxMargin}"
                                                    HorizontalContentAlignment="Stretch"
                                                    VerticalContentAlignment="Center"
                                                    IsTabStop="False"
                                                    Style="{StaticResource DefaultContentControlStyle}" />

                                                <Button
                                                    x:Name="PaneAutoSuggestButton"
                                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
                                                    Style="{DynamicResource NavigationViewPaneSearchButtonStyle}"
                                                    Visibility="Collapsed" />
                                            </Grid>

                                            <ContentControl
                                                x:Name="PaneCustomContentBorder"
                                                Grid.Row="4"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Stretch"
                                                IsTabStop="False"
                                                Style="{StaticResource DefaultContentControlStyle}" />

                                            <!--  "Non header" content  -->
                                            <Grid x:Name="ItemsContainerGrid" Grid.Row="6">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition
                                                        x:Name="MenuItemsRow"
                                                        Height="*"
                                                        MinHeight="{DynamicResource NavigationViewItemOnLeftMinHeight}" />
                                                    <!--  MenuItems  -->
                                                    <RowDefinition Height="Auto" MinHeight="21" />
                                                    <!--  Fill spacing  -->
                                                    <RowDefinition Height="Auto" />
                                                    <!--  PaneFooter  -->
                                                    <RowDefinition
                                                        x:Name="FooterItemsRow"
                                                        Height="Auto"
                                                        MinHeight="{DynamicResource NavigationViewItemOnLeftMinHeight}" />
                                                    <!--  FooterItems  -->
                                                </Grid.RowDefinitions>

                                                <!--  MenuItems  -->
                                                <local:ItemsRepeaterScrollHost HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <ui:ScrollViewerEx
                                                        x:Name="MenuItemsScrollViewer"
                                                        KeyboardNavigation.TabNavigation="Local"
                                                        VerticalScrollBarVisibility="Auto">
                                                        <!--  Left nav ItemsRepeater  -->
                                                        <local:ItemsRepeater x:Name="MenuItemsHost" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" />
                                                    </ui:ScrollViewerEx>
                                                </local:ItemsRepeaterScrollHost>

                                                <local:NavigationViewItemSeparator
                                                    x:Name="VisualItemsSeparator"
                                                    Grid.Row="1"
                                                    Margin="0,0,0,2"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Center"
                                                    Visibility="Collapsed" />

                                                <!--  PaneFooter  -->
                                                <ContentControl
                                                    x:Name="FooterContentBorder"
                                                    Grid.Row="2"
                                                    Margin="0,0,0,4"
                                                    HorizontalContentAlignment="Stretch"
                                                    VerticalContentAlignment="Stretch"
                                                    IsTabStop="False"
                                                    Style="{StaticResource DefaultContentControlStyle}" />

                                                <!--  FooterItems  -->
                                                <local:ItemsRepeaterScrollHost Grid.Row="3">
                                                    <ui:ScrollViewerEx x:Name="FooterItemsScrollViewer">
                                                        <!--  contract7Present:VerticalAnchorRatio="1"  -->
                                                        <local:ItemsRepeater x:Name="FooterMenuItemsHost" />
                                                    </ui:ScrollViewerEx>
                                                </local:ItemsRepeaterScrollHost>
                                            </Grid>

                                        </Grid>
                                    </Border>
                                </local:SplitView.Pane>

                                <local:SplitView.Content>
                                    <Border
                                        x:Name="ContentBorder"
                                        Margin="{DynamicResource NavigationViewContentMargin}"
                                        Background="{DynamicResource NavigationViewContentBackground}"
                                        BorderBrush="{DynamicResource NavigationViewContentGridBorderBrush}"
                                        BorderThickness="{DynamicResource NavigationViewContentGridBorderThickness}"
                                        CornerRadius="{DynamicResource NavigationViewContentGridCornerRadius}">
                                        <Grid x:Name="ContentGrid">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Grid
                                                x:Name="ContentTopPadding"
                                                Grid.ColumnSpan="2"
                                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}" />

                                            <Grid x:Name="ContentLeftPadding" Grid.Row="1" />

                                            <ContentControl
                                                x:Name="HeaderContent"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                MinHeight="{DynamicResource PaneToggleButtonHeight}"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Stretch"
                                                Content="{TemplateBinding Header}"
                                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                IsTabStop="False"
                                                Style="{DynamicResource NavigationViewTitleHeaderContentControlTextStyle}" />

                                            <ContentPresenter
                                                Grid.Row="2"
                                                Grid.ColumnSpan="2"
                                                Content="{TemplateBinding Content}" />
                                        </Grid>
                                    </Border>
                                </local:SplitView.Content>
                            </local:SplitView>

                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeGroup">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="DisplayModeGroupListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Compact" />
                                <VisualState x:Name="Expanded" />
                                <VisualState x:Name="Minimal" />
                                <VisualState x:Name="TopNavigationMinimal" />
                                <VisualState x:Name="MinimalWithBackButton" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="TogglePaneGroup">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="TogglePaneGroupListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="TogglePaneButtonVisible" />
                                <VisualState x:Name="TogglePaneButtonCollapsed" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="HeaderGroup">
                                <VisualState x:Name="HeaderVisible" />
                                <VisualState x:Name="HeaderCollapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContent" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="AutoSuggestGroup">
                                <VisualState x:Name="AutoSuggestBoxVisible" />
                                <VisualState x:Name="AutoSuggestBoxCollapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AutoSuggestArea" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopPaneAutoSuggestArea" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneStateGroup">
                                <VisualState x:Name="NotClosedCompact" />
                                <VisualState x:Name="ClosedCompact">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneAutoSuggestBoxPresenter" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneAutoSuggestButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneStateListSizeGroup">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PaneStateListSizeGroupListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="ListSizeFull" />
                                <VisualState x:Name="ListSizeCompact" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneOverlayGroup">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="PaneOverlayGroupListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="PaneOverlaying">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="X">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding Source={StaticResource RootSplitViewProxy}, Path=Value.TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.1,0.9 0.2,1.0"
                                                KeyTime="0:0:0.35"
                                                Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.35" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Left}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PaneNotOverlaying">
                                    <Storyboard x:Name="ShadowCasterEaseOutStoryboard">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="X">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.1,0.9 0.2,1.0"
                                                KeyTime="0:0:0.12"
                                                Value="{Binding Source={StaticResource RootSplitViewProxy}, Path=Value.TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.12" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Left}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                <VisualState x:Name="TitleBarVisible" />
                                <VisualState x:Name="TitleBarCollapsed">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PaneContentBorder" Storyboard.TargetProperty="Margin">
                                            <DiscreteThicknessKeyFrame KeyTime="0" Value="0,32,0,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="OverflowLabelGroup">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="OverflowLabelGroupListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="OverflowButtonWithLabel" />
                                <VisualState x:Name="OverflowButtonNoLabel" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="BackButtonGroup">
                                <VisualState x:Name="BackButtonVisible" />
                                <VisualState x:Name="BackButtonCollapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackButtonPlaceholderOnTopNav" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneVisibilityGroup">
                                <VisualState x:Name="PaneVisible" />
                                <VisualState x:Name="PaneCollapsed">
                                    <Storyboard>
                                        <!--  Note that RootSplitView.DisplayMode is set in code so we don't want to  -->
                                        <!--  write it here and interfere. But these values work together to hide  -->
                                        <!--  the left pane.  -->
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RootSplitView" Storyboard.TargetProperty="CompactPaneLength">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Width">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneToggleButtonGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="DisplayModeGroupListener" Property="CurrentStateName" Value="Minimal">
                            <Setter TargetName="HeaderContent" Property="Margin" Value="{DynamicResource NavigationViewMinimalHeaderMargin}" />
                            <Setter TargetName="NavigationViewBackButton" Property="Style" Value="{DynamicResource NavigationBackButtonSmallStyle}" />
                            <Setter TargetName="ContentBorder" Property="BorderThickness" Value="{DynamicResource NavigationViewMinimalContentGridBorderThickness}" />
                            <Setter TargetName="ContentBorder" Property="CornerRadius" Value="{DynamicResource NavigationViewMinimalContentGridCornerRadius}" />
                            <Setter TargetName="ContentBorder" Property="Margin" Value="{DynamicResource NavigationViewMinimalContentMargin}" />
                        </Trigger>
                        <Trigger SourceName="DisplayModeGroupListener" Property="CurrentStateName" Value="TopNavigationMinimal">
                            <Setter TargetName="ContentBorder" Property="BorderThickness" Value="{DynamicResource TopNavigationViewContentGridBorderThickness}" />
                            <Setter TargetName="ContentBorder" Property="CornerRadius" Value="{DynamicResource TopNavigationViewContentGridCornerRadius}" />
                            <Setter TargetName="ContentBorder" Property="Margin" Value="{DynamicResource TopNavigationViewContentMargin}" />
                        </Trigger>
                        <Trigger SourceName="DisplayModeGroupListener" Property="CurrentStateName" Value="MinimalWithBackButton">
                            <Setter TargetName="HeaderContent" Property="Margin" Value="{DynamicResource NavigationViewMinimalHeaderMargin}" />
                            <Setter TargetName="NavigationViewBackButton" Property="Style" Value="{DynamicResource NavigationBackButtonSmallStyle}" />
                            <Setter TargetName="ContentBorder" Property="BorderThickness" Value="{DynamicResource NavigationViewMinimalContentGridBorderThickness}" />
                            <Setter TargetName="ContentBorder" Property="CornerRadius" Value="{DynamicResource NavigationViewMinimalContentGridCornerRadius}" />
                            <Setter TargetName="ContentBorder" Property="Margin" Value="{DynamicResource NavigationViewMinimalContentMargin}" />
                        </Trigger>

                        <Trigger SourceName="TogglePaneGroupListener" Property="CurrentStateName" Value="TogglePaneButtonVisible">
                            <Setter TargetName="PaneContentGridToggleButtonRow" Property="MinHeight" Value="{DynamicResource NavigationViewPaneHeaderRowMinHeight}" />
                            <Setter TargetName="PaneTitlePresenter" Property="Margin" Value="{DynamicResource NavigationViewItemInnerHeaderMargin}" />
                        </Trigger>

                        <Trigger SourceName="PaneStateListSizeGroupListener" Property="CurrentStateName" Value="ListSizeCompact">
                            <Setter TargetName="PaneContentBorder" Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                            <Setter TargetName="ShadowCaster" Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                            <Setter TargetName="PaneTitleTextBlock" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PaneHeaderContentBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PaneCustomContentBorder" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="FooterContentBorder" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>

                        <Trigger SourceName="PaneOverlayGroupListener" Property="CurrentStateName" Value="PaneNotOverlaying">
                            <Setter TargetName="RootSplitView" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="ShadowCaster" Property="Opacity" Value="0" />
                            <Setter TargetName="RootSplitView" Property="PaneBackground" Value="{DynamicResource NavigationViewExpandedPaneBackground}" />
                        </Trigger>

                        <Trigger SourceName="OverflowLabelGroupListener" Property="CurrentStateName" Value="OverflowButtonNoLabel">
                            <Setter TargetName="TopNavOverflowButton" Property="Style" Value="{DynamicResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPaneOpen" Value="False" />
                                <Condition Property="DisplayMode" Value="Compact" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TogglePaneButton" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="TogglePaneButton" Property="Padding" Value="{DynamicResource NavigationViewItemButtonNormalMargin}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPaneOpen" Value="False" />
                                <Condition Property="DisplayMode" Value="Expanded" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TogglePaneButton" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="TogglePaneButton" Property="Padding" Value="{DynamicResource NavigationViewItemButtonNormalMargin}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="PaneTitle" Value="" />
                                <Condition Property="DisplayMode" Value="Compact" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TogglePaneButton" Property="Padding" Value="0" />
                            <Setter TargetName="TogglePaneButton" Property="HorizontalAlignment" Value="Center" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="PaneTitle" Value="" />
                                <Condition Property="DisplayMode" Value="Expanded" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TogglePaneButton" Property="Padding" Value="0" />
                            <Setter TargetName="TogglePaneButton" Property="HorizontalAlignment" Value="Center" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:NavigationViewItem">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{DynamicResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Margin" Value="{DynamicResource NavigationViewItemMargin}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItem">
                    <Grid x:Name="NVIRootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <primitives:NavigationViewItemPresenter
                            x:Name="NavigationViewItemPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Foreground="{TemplateBinding Foreground}"
                            Icon="{TemplateBinding Icon}"
                            InfoBadge="{TemplateBinding InfoBadge}"
                            IsTabStop="false"
                            UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" />
                        <local:ItemsRepeater
                            x:Name="NavigationViewItemMenuItemsHost"
                            Grid.Row="1"
                            Visibility="Collapsed">
                            <local:ItemsRepeater.Layout>
                                <local:StackLayout Orientation="Vertical" />
                            </local:ItemsRepeater.Layout>
                        </local:ItemsRepeater>
                        <primitives:FlyoutBase.AttachedFlyout>
                            <local:Flyout x:Name="ChildrenFlyout" Placement="RightEdgeAlignedTop">
                                <local:Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="local:FlyoutPresenter">
                                        <Setter Property="Padding" Value="{DynamicResource TopNavigationViewOverflowMenuPadding}" />
                                        <!--  Set negative top margin to make the flyout align exactly with the button  -->
                                        <!--<Setter Property="Margin" Value="0,-4,0,0" />-->
                                        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
                                    </Style>
                                </local:Flyout.FlyoutPresenterStyle>
                                <Grid x:Name="FlyoutRootGrid">
                                    <Grid x:Name="FlyoutContentGrid" />
                                </Grid>
                            </local:Flyout>
                        </primitives:FlyoutBase.AttachedFlyout>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="ItemOnNavigationViewListPositionStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="OnLeftNavigation" />
                                <!--
                                     <VisualState x:Name="OnLeftNavigationReveal" />
                                -->
                                <VisualState x:Name="OnTopNavigationPrimary">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChildrenFlyout" Storyboard.TargetProperty="Placement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static primitives:FlyoutPlacementMode.BottomEdgeAlignedLeft}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <!--
                                     <VisualState x:Name="OnTopNavigationPrimaryReveal">
                                     <Storyboard>
                                     <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChildrenFlyout" Storyboard.TargetProperty="Placement">
                                     <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static primitives:FlyoutPlacementMode.BottomEdgeAlignedLeft}" />
                                     </ObjectAnimationUsingKeyFrames>
                                     </Storyboard>
                                     </VisualState>
                                -->
                                <VisualState x:Name="OnTopNavigationOverflow" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--  OnLeftNavigation  -->
                        <Trigger SourceName="ItemOnNavigationViewListPositionStatesListener" Property="CurrentStateName" Value="OnLeftNavigation">
                            <Setter TargetName="NavigationViewItemPresenter" Property="Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPane}" />
                        </Trigger>
                        <!--  OnLeftNavigationReveal  -->
                        <!--
                             <Trigger Property="CurrentStateName" Value="OnLeftNavigationReveal" SourceName="ItemOnNavigationViewListPositionStatesListener">
                             <Setter TargetName="NavigationViewItemPresenter" Property="Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPaneWithRevealFocus}" />
                             </Trigger>
                        -->
                        <!--  OnTopNavigationPrimary  -->
                        <Trigger SourceName="ItemOnNavigationViewListPositionStatesListener" Property="CurrentStateName" Value="OnTopNavigationPrimary">
                            <Setter TargetName="NavigationViewItemPresenter" Property="Margin" Value="{DynamicResource TopNavigationViewItemMargin}" />
                            <Setter TargetName="NavigationViewItemPresenter" Property="Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPane}" />
                            <!--<Setter TargetName="ChildrenFlyout" Property="Placement" Value="BottomEdgeAlignedLeft" />-->
                        </Trigger>
                        <!--  OnTopNavigationPrimaryReveal  -->
                        <!--
                             <Trigger Property="CurrentStateName" Value="OnTopNavigationPrimaryReveal" SourceName="ItemOnNavigationViewListPositionStatesListener">
                             <Setter TargetName="NavigationViewItemPresenter" Property="Margin" Value="{DynamicResource TopNavigationViewItemMargin}" />
                             <Setter TargetName="NavigationViewItemPresenter" Property="Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneWithRevealFocus}" />
                             </Trigger>
                        -->
                        <!--  OnTopNavigationOverflow  -->
                        <Trigger SourceName="ItemOnNavigationViewListPositionStatesListener" Property="CurrentStateName" Value="OnTopNavigationOverflow">
                            <Setter TargetName="NavigationViewItemPresenter" Property="Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter" />

    <Style TargetType="local:NavigationViewItemHeader">
        <Setter Property="Foreground" Value="{DynamicResource NavigationViewItemHeaderForeground}" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItemHeader">
                    <Grid x:Name="NavigationViewItemHeaderRootGrid">
                        <VisualStateManager.CustomVisualStateManager>
                            <ui:SimpleVisualStateManager />
                        </VisualStateManager.CustomVisualStateManager>
                        <Grid
                            x:Name="InnerHeaderGrid"
                            Height="40"
                            Margin="{DynamicResource NavigationViewItemInnerHeaderMargin}"
                            HorizontalAlignment="Left">
                            <TextBlock
                                x:Name="HeaderText"
                                Margin="0,-1,0,-1"
                                VerticalAlignment="Center"
                                Style="{DynamicResource NavigationViewItemHeaderTextStyle}"
                                Text="{TemplateBinding Content}"
                                TextWrapping="NoWrap" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PaneStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="HeaderTextCollapsed" To="HeaderTextVisible">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="40" />
                                            </DoubleAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0.0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="0.0,0.35 0.15,1.0"
                                                    KeyTime="0:0:0.2"
                                                    Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition From="HeaderTextVisible" To="HeaderTextCollapsed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                <SplineDoubleKeyFrame
                                                    KeySpline="0.0,0.35 0.15,1.0"
                                                    KeyTime="0:0:0.1"
                                                    Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="HeaderTextVisible" />
                                <VisualState x:Name="HeaderTextCollapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:NavigationViewItemSeparator">
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="NavigationViewItemSeparatorRootGrid">
                        <Rectangle
                            x:Name="SeparatorLine"
                            Height="{DynamicResource NavigationViewItemSeparatorHeight}"
                            Margin="{DynamicResource NavigationViewItemSeparatorMargin}"
                            Fill="{DynamicResource NavigationViewItemSeparatorForeground}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="NavigationSeparatorLineStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="NavigationSeparatorLineStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="HorizontalLine" />
                                <VisualState x:Name="HorizontalLineCompact" />
                                <VisualState x:Name="VerticalLine" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  HorizontalLineCompact  -->
                        <Trigger SourceName="NavigationSeparatorLineStatesListener" Property="CurrentStateName" Value="HorizontalLineCompact">
                            <Setter TargetName="SeparatorLine" Property="Margin" Value="{DynamicResource NavigationViewCompactItemSeparatorMargin}" />
                        </Trigger>
                        <!--  VerticalLine  -->
                        <Trigger SourceName="NavigationSeparatorLineStatesListener" Property="CurrentStateName" Value="VerticalLine">
                            <Setter TargetName="SeparatorLine" Property="Height" Value="24" />
                            <Setter TargetName="SeparatorLine" Property="Width" Value="{DynamicResource TopNavigationViewItemSeparatorWidth}" />
                            <Setter TargetName="SeparatorLine" Property="Margin" Value="{DynamicResource TopNavigationViewItemSeparatorMargin}" />
                            <Setter TargetName="SeparatorLine" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="SeparatorLine" Property="Fill" Value="{DynamicResource TopNavigationViewItemSeparatorForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>