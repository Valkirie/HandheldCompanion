//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HandheldCompanion.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HandheldCompanion.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à About.
        /// </summary>
        public static string AboutPage_About {
            get {
                return ResourceManager.GetString("AboutPage_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A combination of a Windows service and a touch interface optimized GUI to increase your handheld gaming computer experience. Features include: motion control a.k.a. gyro control, virtual controller simulation, quick tools overlay, virtual touchpads, 3D controller model, per application based profile settings system. Handheld Companion relies on ViGEmBus driver and ViGEmClient libraries as well as HidHide kernel-mode filter driver. Motion control algorithms are based on work by Jibbsmart and availible inform [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string AboutPage_AboutDescription {
            get {
                return ResourceManager.GetString("AboutPage_AboutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Accelerometer.
        /// </summary>
        public static string AboutPage_Accelerometer {
            get {
                return ResourceManager.GetString("AboutPage_Accelerometer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Author.
        /// </summary>
        public static string AboutPage_Author {
            get {
                return ResourceManager.GetString("AboutPage_Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Contributors.
        /// </summary>
        public static string AboutPage_Contributors {
            get {
                return ResourceManager.GetString("AboutPage_Contributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        public static string AboutPage_Description {
            get {
                return ResourceManager.GetString("AboutPage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Donate.
        /// </summary>
        public static string AboutPage_Donate {
            get {
                return ResourceManager.GetString("AboutPage_Donate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gyrometer.
        /// </summary>
        public static string AboutPage_Gyrometer {
            get {
                return ResourceManager.GetString("AboutPage_Gyrometer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Inclinometer.
        /// </summary>
        public static string AboutPage_Inclinometer {
            get {
                return ResourceManager.GetString("AboutPage_Inclinometer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à N/A.
        /// </summary>
        public static string AboutPage_NotApplicable {
            get {
                return ResourceManager.GetString("AboutPage_NotApplicable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Related Links.
        /// </summary>
        public static string AboutPage_RelatedLinks {
            get {
                return ResourceManager.GetString("AboutPage_RelatedLinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External.
        /// </summary>
        public static string AboutPage_SensorExternal {
            get {
                return ResourceManager.GetString("AboutPage_SensorExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Internal.
        /// </summary>
        public static string AboutPage_SensorInternal {
            get {
                return ResourceManager.GetString("AboutPage_SensorInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor name.
        /// </summary>
        public static string AboutPage_SensorName {
            get {
                return ResourceManager.GetString("AboutPage_SensorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor specification.
        /// </summary>
        public static string AboutPage_SensorSpecification {
            get {
                return ResourceManager.GetString("AboutPage_SensorSpecification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service.
        /// </summary>
        public static string AboutPage_Service {
            get {
                return ResourceManager.GetString("AboutPage_Service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Source code.
        /// </summary>
        public static string AboutPage_SourceCode {
            get {
                return ResourceManager.GetString("AboutPage_SourceCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version.
        /// </summary>
        public static string AboutPage_Version {
            get {
                return ResourceManager.GetString("AboutPage_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wiki.
        /// </summary>
        public static string AboutPage_Wiki {
            get {
                return ResourceManager.GetString("AboutPage_Wiki", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Administrator.
        /// </summary>
        public static string Administrator {
            get {
                return ResourceManager.GetString("Administrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] chord_neptune {
            get {
                object obj = ResourceManager.GetObject("chord_neptune", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hide controller on connect.
        /// </summary>
        public static string ControllerPage_CloakDevice {
            get {
                return ResourceManager.GetString("ControllerPage_CloakDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hide physical controller when connected.
        /// </summary>
        public static string ControllerPage_CloakDeviceDesc {
            get {
                return ResourceManager.GetString("ControllerPage_CloakDeviceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Connect.
        /// </summary>
        public static string ControllerPage_Connect {
            get {
                return ResourceManager.GetString("ControllerPage_Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller.
        /// </summary>
        public static string ControllerPage_Controller {
            get {
                return ResourceManager.GetString("ControllerPage_Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller cloaking.
        /// </summary>
        public static string ControllerPage_DeviceCloaking {
            get {
                return ResourceManager.GetString("ControllerPage_DeviceCloaking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller settings.
        /// </summary>
        public static string ControllerPage_DeviceSettings {
            get {
                return ResourceManager.GetString("ControllerPage_DeviceSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disconnect.
        /// </summary>
        public static string ControllerPage_Disconnect {
            get {
                return ResourceManager.GetString("ControllerPage_Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Input devices.
        /// </summary>
        public static string ControllerPage_InputDevices {
            get {
                return ResourceManager.GetString("ControllerPage_InputDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mute virtual controller.
        /// </summary>
        public static string ControllerPage_SteamDeckMuteController {
            get {
                return ResourceManager.GetString("ControllerPage_SteamDeckMuteController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mute virtual controller on steam related applications.
        /// </summary>
        public static string ControllerPage_SteamDeckMuteControllerDesc {
            get {
                return ResourceManager.GetString("ControllerPage_SteamDeckMuteControllerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unhide controller on close.
        /// </summary>
        public static string ControllerPage_UncloakOnClose {
            get {
                return ResourceManager.GetString("ControllerPage_UncloakOnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restore visibility of all physical controllers when application is exited.
        /// </summary>
        public static string ControllerPage_UncloakOnCloseDesc {
            get {
                return ResourceManager.GetString("ControllerPage_UncloakOnCloseDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vibrate controller on connect.
        /// </summary>
        public static string ControllerPage_VibrateDevice {
            get {
                return ResourceManager.GetString("ControllerPage_VibrateDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vibrate physical controller when connected.
        /// </summary>
        public static string ControllerPage_VibrateDeviceDesc {
            get {
                return ResourceManager.GetString("ControllerPage_VibrateDeviceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vibration strength.
        /// </summary>
        public static string ControllerPage_VibrationStrength {
            get {
                return ResourceManager.GetString("ControllerPage_VibrationStrength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change controller vibration strength.
        /// </summary>
        public static string ControllerPage_VibrationStrengthExpl {
            get {
                return ResourceManager.GetString("ControllerPage_VibrationStrengthExpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] empty_neptune {
            get {
                object obj = ResourceManager.GetObject("empty_neptune", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon {
            get {
                object obj = ResourceManager.GetObject("icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease brightness.
        /// </summary>
        public static string InputsHotkey_decreaseBrightness {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseBrightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease the current display brightness by 5%.
        /// </summary>
        public static string InputsHotkey_decreaseBrightnessDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseBrightnessDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease thermal power limit (TDP).
        /// </summary>
        public static string InputsHotkey_decreaseTDP {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseTDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease system or currently applied profile TDP by one watt.
        /// </summary>
        public static string InputsHotkey_decreaseTDPDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseTDPDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease volume.
        /// </summary>
        public static string InputsHotkey_decreaseVolume {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Decrease the system volume by 5%.
        /// </summary>
        public static string InputsHotkey_decreaseVolumeDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseVolumeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Desktop layout.
        /// </summary>
        public static string InputsHotkey_DesktopLayoutEnabled {
            get {
                return ResourceManager.GetString("InputsHotkey_DesktopLayoutEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle Desktop controller layout.
        /// </summary>
        public static string InputsHotkey_DesktopLayoutEnabledDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_DesktopLayoutEnabledDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press to define hotkey input.
        /// </summary>
        public static string InputsHotkey_fallbackInput {
            get {
                return ResourceManager.GetString("InputsHotkey_fallbackInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press to define keyboard output.
        /// </summary>
        public static string InputsHotkey_fallbackOutput {
            get {
                return ResourceManager.GetString("InputsHotkey_fallbackOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase brightness.
        /// </summary>
        public static string InputsHotkey_increaseBrightness {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseBrightness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase the current display brightness by 5%.
        /// </summary>
        public static string InputsHotkey_increaseBrightnessDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseBrightnessDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase thermal power limit (TDP).
        /// </summary>
        public static string InputsHotkey_increaseTDP {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseTDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase system or currently applied profile TDP by one watt.
        /// </summary>
        public static string InputsHotkey_increaseTDPDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseTDPDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase volume.
        /// </summary>
        public static string InputsHotkey_increaseVolume {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Increase the system volume by 5%.
        /// </summary>
        public static string InputsHotkey_increaseVolumeDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseVolumeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à On-screen display.
        /// </summary>
        public static string InputsHotkey_OnScreenDisplay {
            get {
                return ResourceManager.GetString("InputsHotkey_OnScreenDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable on-screen display support.
        /// </summary>
        public static string InputsHotkey_OnScreenDisplayDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_OnScreenDisplayDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display 3D controller.
        /// </summary>
        public static string InputsHotkey_overlayGamepad {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayGamepad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_overlayGamepadDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayGamepadDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display virtual trackpads.
        /// </summary>
        public static string InputsHotkey_overlayTrackpads {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayTrackpads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_overlayTrackpadsDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayTrackpadsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Summon quick tools window.
        /// </summary>
        public static string InputsHotkey_quickTools {
            get {
                return ResourceManager.GetString("InputsHotkey_quickTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_quickToolsDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_quickToolsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fan override.
        /// </summary>
        public static string InputsHotkey_QuietModeToggled {
            get {
                return ResourceManager.GetString("InputsHotkey_QuietModeToggled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set the fan duty cycle to user-defined value.
        /// </summary>
        public static string InputsHotkey_QuietModeToggledDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_QuietModeToggledDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display Action center.
        /// </summary>
        public static string InputsHotkey_shortcutControlCenter {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutControlCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display and hide Windows Action center.
        /// </summary>
        public static string InputsHotkey_shortcutControlCenterDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutControlCenterDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom shortcut.
        /// </summary>
        public static string InputsHotkey_shortcutCustom {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutCustomDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutCustomDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display and hide the desktop.
        /// </summary>
        public static string InputsHotkey_shortcutDesktop {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutDesktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Windows + D.
        /// </summary>
        public static string InputsHotkey_shortcutDesktopDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutDesktopDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Escape.
        /// </summary>
        public static string InputsHotkey_shortcutESC {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Escape.
        /// </summary>
        public static string InputsHotkey_shortcutESCDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutESCDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Switches between window and full screen.
        /// </summary>
        public static string InputsHotkey_shortcutExpand {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutExpand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Alt + Enter.
        /// </summary>
        public static string InputsHotkey_shortcutExpandDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutExpandDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Guide or PS button.
        /// </summary>
        public static string InputsHotkey_shortcutGuide {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulate a Xbox Guide or Sony PS button input.
        /// </summary>
        public static string InputsHotkey_shortcutGuideDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutGuideDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display touch keyboard.
        /// </summary>
        public static string InputsHotkey_shortcutKeyboard {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKeyboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutKeyboardDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKeyboardDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Force application shutdown.
        /// </summary>
        public static string InputsHotkey_shortcutKillApp {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKillApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutKillAppDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKillAppDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display and hide main window.
        /// </summary>
        public static string InputsHotkey_shortcutMainwindow {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutMainwindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutMainwindowDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutMainwindowDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Snipping tool.
        /// </summary>
        public static string InputsHotkey_shortcutPrintScreen {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutPrintScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Windows + Shift + S.
        /// </summary>
        public static string InputsHotkey_shortcutPrintScreenDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutPrintScreenDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Task Manager.
        /// </summary>
        public static string InputsHotkey_shortcutTaskManager {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Ctrl + Shift + Esc.
        /// </summary>
        public static string InputsHotkey_shortcutTaskManagerDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskManagerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open Task view.
        /// </summary>
        public static string InputsHotkey_shortcutTaskview {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Press this key: Windows + Tab.
        /// </summary>
        public static string InputsHotkey_shortcutTaskviewDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskviewDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toggle Suspender.
        /// </summary>
        public static string InputsHotkey_suspendResumeTask {
            get {
                return ResourceManager.GetString("InputsHotkey_suspendResumeTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Suspend or resume the foreground application.
        /// </summary>
        public static string InputsHotkey_suspendResumeTaskDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_suspendResumeTaskDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Handheld Companion.
        /// </summary>
        public static string MainWindow_HandheldCompanion {
            get {
                return ResourceManager.GetString("MainWindow_HandheldCompanion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à About.
        /// </summary>
        public static string MainWindow_navAbout {
            get {
                return ResourceManager.GetString("MainWindow_navAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller.
        /// </summary>
        public static string MainWindow_navController {
            get {
                return ResourceManager.GetString("MainWindow_navController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay.
        /// </summary>
        public static string MainWindow_navOverlay {
            get {
                return ResourceManager.GetString("MainWindow_navOverlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profiles.
        /// </summary>
        public static string MainWindow_navProfiles {
            get {
                return ResourceManager.GetString("MainWindow_navProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OK.
        /// </summary>
        public static string MainWindow_OK {
            get {
                return ResourceManager.GetString("MainWindow_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Deploy service.
        /// </summary>
        public static string MainWindow_serviceDeploy {
            get {
                return ResourceManager.GetString("MainWindow_serviceDeploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service manager.
        /// </summary>
        public static string MainWindow_ServiceManager {
            get {
                return ResourceManager.GetString("MainWindow_ServiceManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Oups. There was an issue while we tried to start the service..
        /// </summary>
        public static string MainWindow_ServiceManagerStartIssue {
            get {
                return ResourceManager.GetString("MainWindow_ServiceManagerStartIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Oups. There was an issue while we tried to stop the service..
        /// </summary>
        public static string MainWindow_ServiceManagerStopIssue {
            get {
                return ResourceManager.GetString("MainWindow_ServiceManagerStopIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Remove service.
        /// </summary>
        public static string MainWindow_serviceRemove {
            get {
                return ResourceManager.GetString("MainWindow_serviceRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start service.
        /// </summary>
        public static string MainWindow_serviceStart {
            get {
                return ResourceManager.GetString("MainWindow_serviceStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stop service.
        /// </summary>
        public static string MainWindow_serviceStop {
            get {
                return ResourceManager.GetString("MainWindow_serviceStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Settings.
        /// </summary>
        public static string MainWindow_Settings {
            get {
                return ResourceManager.GetString("MainWindow_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay.
        /// </summary>
        public static string Overlay_Overlay {
            get {
                return ResourceManager.GetString("Overlay_Overlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 8BitDo Lite 2.
        /// </summary>
        public static string OverlayPage_8BitDoLite2Controller {
            get {
                return ResourceManager.GetString("OverlayPage_8BitDoLite2Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Alignment.
        /// </summary>
        public static string OverlayPage_Alignment {
            get {
                return ResourceManager.GetString("OverlayPage_Alignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay alignment.
        /// </summary>
        public static string OverlayPage_AlignmentDesc {
            get {
                return ResourceManager.GetString("OverlayPage_AlignmentDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change trackpads overlay alignment.
        /// </summary>
        public static string OverlayPage_AlignmentTrackpadDesc {
            get {
                return ResourceManager.GetString("OverlayPage_AlignmentTrackpadDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Always on top.
        /// </summary>
        public static string OverlayPage_AlwaysOnTop {
            get {
                return ResourceManager.GetString("OverlayPage_AlwaysOnTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When toggled, 3D controller overlay will stay on top of other windows.
        /// </summary>
        public static string OverlayPage_AlwaysOnTopDesc {
            get {
                return ResourceManager.GetString("OverlayPage_AlwaysOnTopDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Back.
        /// </summary>
        public static string OverlayPage_BackButton {
            get {
                return ResourceManager.GetString("OverlayPage_BackButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Face camera.
        /// </summary>
        public static string OverlayPage_CameraAngle {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay model behaviour for facing the camera.
        /// </summary>
        public static string OverlayPage_CameraAngleDesc {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAngleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stationary pitch.
        /// </summary>
        public static string OverlayPage_CameraAnglePitch {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAnglePitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the angle, in degree.
        /// </summary>
        public static string OverlayPage_CameraAnglePitchDesc {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAnglePitchDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Background Color.
        /// </summary>
        public static string OverlayPage_Color {
            get {
                return ResourceManager.GetString("OverlayPage_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay background color.
        /// </summary>
        public static string OverlayPage_ColorDesc {
            get {
                return ResourceManager.GetString("OverlayPage_ColorDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller options.
        /// </summary>
        public static string OverlayPage_ControllerOptions {
            get {
                return ResourceManager.GetString("OverlayPage_ControllerOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Playstation DualSense.
        /// </summary>
        public static string OverlayPage_DualSenseController {
            get {
                return ResourceManager.GetString("OverlayPage_DualSenseController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Emulated controller.
        /// </summary>
        public static string OverlayPage_EmulatedController {
            get {
                return ResourceManager.GetString("OverlayPage_EmulatedController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Face camera.
        /// </summary>
        public static string OverlayPage_FaceCamera {
            get {
                return ResourceManager.GetString("OverlayPage_FaceCamera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 3D Model slowly rotates to face camera as default position.
        /// </summary>
        public static string OverlayPage_FaceCameraDesc {
            get {
                return ResourceManager.GetString("OverlayPage_FaceCameraDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Listening....
        /// </summary>
        public static string OverlayPage_Listening {
            get {
                return ResourceManager.GetString("OverlayPage_Listening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MACHENIKE HG510.
        /// </summary>
        public static string OverlayPage_MachenikeHG510Controller {
            get {
                return ResourceManager.GetString("OverlayPage_MachenikeHG510Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Main trigger.
        /// </summary>
        public static string OverlayPage_MainTrigger {
            get {
                return ResourceManager.GetString("OverlayPage_MainTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay main trigger.
        /// </summary>
        public static string OverlayPage_MainTriggerDesc {
            get {
                return ResourceManager.GetString("OverlayPage_MainTriggerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Motion.
        /// </summary>
        public static string OverlayPage_MotionActivated {
            get {
                return ResourceManager.GetString("OverlayPage_MotionActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Model will move in accordance with user movements based on sensor information.
        /// </summary>
        public static string OverlayPage_MotionActivatedDesc {
            get {
                return ResourceManager.GetString("OverlayPage_MotionActivatedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à N64.
        /// </summary>
        public static string OverlayPage_N64Controller {
            get {
                return ResourceManager.GetString("OverlayPage_N64Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OEM controller.
        /// </summary>
        public static string OverlayPage_OEMController {
            get {
                return ResourceManager.GetString("OverlayPage_OEMController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Opacity.
        /// </summary>
        public static string OverlayPage_Opacity {
            get {
                return ResourceManager.GetString("OverlayPage_Opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay opacity.
        /// </summary>
        public static string OverlayPage_OpacityControllerDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OpacityControllerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change trackpads overlay opacity.
        /// </summary>
        public static string OverlayPage_OpacityTrackpadDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OpacityTrackpadDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay.
        /// </summary>
        public static string OverlayPage_Overlay {
            get {
                return ResourceManager.GetString("OverlayPage_Overlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay display level.
        /// </summary>
        public static string OverlayPage_OverlayDisplayLevel {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the on-screen display level of information.
        /// </summary>
        public static string OverlayPage_OverlayDisplayLevelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayLevelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update rate.
        /// </summary>
        public static string OverlayPage_OverlayDisplayUpdateRate {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayUpdateRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the on-screen display update rate.
        /// </summary>
        public static string OverlayPage_OverlayDisplayUpdateRateDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayDisplayUpdateRateDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay model.
        /// </summary>
        public static string OverlayPage_OverlayModel {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay model.
        /// </summary>
        public static string OverlayPage_OverlayModelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayModelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overlay preview.
        /// </summary>
        public static string OverlayPage_OverlayPreview {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Render settings.
        /// </summary>
        public static string OverlayPage_RenderSettings {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Anti-Aliasing.
        /// </summary>
        public static string OverlayPage_RenderSettingsAntialiasing {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsAntialiasing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the render anti-aliasing status.
        /// </summary>
        public static string OverlayPage_RenderSettingsAntialiasingDesc {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsAntialiasingDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the render settings of your stationary 3D overlay controller model.
        /// </summary>
        public static string OverlayPage_RenderSettingsDesc {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update rate.
        /// </summary>
        public static string OverlayPage_RenderSettingsFramerate {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsFramerate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the render update rate, in update per second.
        /// </summary>
        public static string OverlayPage_RenderSettingsFramerateDesc {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsFramerateDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Size.
        /// </summary>
        public static string OverlayPage_Size {
            get {
                return ResourceManager.GetString("OverlayPage_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change 3D controller overlay size.
        /// </summary>
        public static string OverlayPage_SizeDesc {
            get {
                return ResourceManager.GetString("OverlayPage_SizeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change trackpads overlay size.
        /// </summary>
        public static string OverlayPage_SizeOverlayDesc {
            get {
                return ResourceManager.GetString("OverlayPage_SizeOverlayDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start.
        /// </summary>
        public static string OverlayPage_StartButton {
            get {
                return ResourceManager.GetString("OverlayPage_StartButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fisher-Price controller.
        /// </summary>
        public static string OverlayPage_ToyController {
            get {
                return ResourceManager.GetString("OverlayPage_ToyController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trackpads options.
        /// </summary>
        public static string OverlayPage_TrackpadsOptions {
            get {
                return ResourceManager.GetString("OverlayPage_TrackpadsOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Xbox One.
        /// </summary>
        public static string OverlayPage_XboxOneController {
            get {
                return ResourceManager.GetString("OverlayPage_XboxOneController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ZD O+.
        /// </summary>
        public static string OverlayPage_ZDOPlusController {
            get {
                return ResourceManager.GetString("OverlayPage_ZDOPlusController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resume.
        /// </summary>
        public static string ProcessEx_processResume {
            get {
                return ResourceManager.GetString("ProcessEx_processResume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Suspend.
        /// </summary>
        public static string ProcessEx_processSuspend {
            get {
                return ResourceManager.GetString("ProcessEx_processSuspend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Accelerometer multiplier.
        /// </summary>
        public static string ProfilesPage_AccelerometerMultiplier {
            get {
                return ResourceManager.GetString("ProfilesPage_AccelerometerMultiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the system reported accelerometer value.
        /// </summary>
        public static string ProfilesPage_AccelerometerMultiplierDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_AccelerometerMultiplierDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Additional settings.
        /// </summary>
        public static string ProfilesPage_AdditionalSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_AdditionalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Anti-deadzone.
        /// </summary>
        public static string ProfilesPage_AntiDeadzone {
            get {
                return ResourceManager.GetString("ProfilesPage_AntiDeadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the in-game anti-deadzone, in percentage.
        /// </summary>
        public static string ProfilesPage_AntiDeadzoneDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_AntiDeadzoneDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  %.
        /// </summary>
        public static string ProfilesPage_AntiDeadzoneUnitPercentage {
            get {
                return ResourceManager.GetString("ProfilesPage_AntiDeadzoneUnitPercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to delete?.
        /// </summary>
        public static string ProfilesPage_AreYouSureDelete1 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureDelete1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This item will be deleted immediatly. You can&apos;t undo this action..
        /// </summary>
        public static string ProfilesPage_AreYouSureDelete2 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureDelete2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to overwrite this profile?.
        /// </summary>
        public static string ProfilesPage_AreYouSureOverwrite1 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureOverwrite1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} will be overwriten. You can&apos;t undo this action..
        /// </summary>
        public static string ProfilesPage_AreYouSureOverwrite2 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureOverwrite2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatic TDP.
        /// </summary>
        public static string ProfilesPage_AutoTDP {
            get {
                return ResourceManager.GetString("ProfilesPage_AutoTDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatic adjustement of TDP based on measured FPS and requested FPS target.
        /// </summary>
        public static string ProfilesPage_AutoTDPDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_AutoTDPDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Framerate target.
        /// </summary>
        public static string ProfilesPage_AutoTDPFPS {
            get {
                return ResourceManager.GetString("ProfilesPage_AutoTDPFPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Desired FPS target value for automatic TDP controller.
        /// </summary>
        public static string ProfilesPage_AutoTDPFPSDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_AutoTDPFPSDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Boost power limit.
        /// </summary>
        public static string ProfilesPage_BoostPower {
            get {
                return ResourceManager.GetString("ProfilesPage_BoostPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change boost thermal power limit.
        /// </summary>
        public static string ProfilesPage_BoostPowerDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_BoostPowerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cancel.
        /// </summary>
        public static string ProfilesPage_Cancel {
            get {
                return ResourceManager.GetString("ProfilesPage_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller layout.
        /// </summary>
        public static string ProfilesPage_ControllerLayout {
            get {
                return ResourceManager.GetString("ProfilesPage_ControllerLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller settings.
        /// </summary>
        public static string ProfilesPage_ControllerSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_ControllerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the virtual controller settings.
        /// </summary>
        public static string ProfilesPage_ControllerSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ControllerSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create a new profile.
        /// </summary>
        public static string ProfilesPage_CreateNewProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_CreateNewProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete.
        /// </summary>
        public static string ProfilesPage_Delete {
            get {
                return ResourceManager.GetString("ProfilesPage_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete profile.
        /// </summary>
        public static string ProfilesPage_DeleteProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_DeleteProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User per-game profile.
        /// </summary>
        public static string ProfilesPage_EnableProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_EnableProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The profile will be automatically applied when the associated application is detected.
        /// </summary>
        public static string ProfilesPage_EnableProfileDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_EnableProfileDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Framerate limit.
        /// </summary>
        public static string ProfilesPage_FramerateLimit {
            get {
                return ResourceManager.GetString("ProfilesPage_FramerateLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Limits framerate for 3D applications.
        /// </summary>
        public static string ProfilesPage_FramerateLimitDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_FramerateLimitDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Global settings.
        /// </summary>
        public static string ProfilesPage_GlobalSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_GlobalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the global profiles settings.
        /// </summary>
        public static string ProfilesPage_GlobalSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GlobalSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GPU Clock max frequency.
        /// </summary>
        public static string ProfilesPage_GPUMhz {
            get {
                return ResourceManager.GetString("ProfilesPage_GPUMhz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Maximum clock speed of the GPU in Mhz.
        /// </summary>
        public static string ProfilesPage_GPUMhzDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GPUMhzDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gyrometer multiplier.
        /// </summary>
        public static string ProfilesPage_GyrometerMultiplier {
            get {
                return ResourceManager.GetString("ProfilesPage_GyrometerMultiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the system reported gyrometer value.
        /// </summary>
        public static string ProfilesPage_GyrometerMultiplierDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GyrometerMultiplierDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gyro steering axis.
        /// </summary>
        public static string ProfilesPage_GyroSteeringAxis {
            get {
                return ResourceManager.GetString("ProfilesPage_GyroSteeringAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à For controlling the horizontal movement of the controller, you can use either the yaw or roll axis.
        /// </summary>
        public static string ProfilesPage_GyroSteeringAxisDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GyroSteeringAxisDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invert horizontal axis.
        /// </summary>
        public static string ProfilesPage_InvertHorizontalAxis {
            get {
                return ResourceManager.GetString("ProfilesPage_InvertHorizontalAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invert vertical axis.
        /// </summary>
        public static string ProfilesPage_InvertVerticalAxis {
            get {
                return ResourceManager.GetString("ProfilesPage_InvertVerticalAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick deadzone % left.
        /// </summary>
        public static string ProfilesPage_JoystickDeadZoneLeft {
            get {
                return ResourceManager.GetString("ProfilesPage_JoystickDeadZoneLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjust the inner and outer deadzone percentage of the left joystick.
        /// </summary>
        public static string ProfilesPage_JoystickDeadZoneLeftDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_JoystickDeadZoneLeftDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick deadzone % right.
        /// </summary>
        public static string ProfilesPage_JoystickDeadZoneRight {
            get {
                return ResourceManager.GetString("ProfilesPage_JoystickDeadZoneRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjust the inner and outer deadzone percentage of the right joystick.
        /// </summary>
        public static string ProfilesPage_JoystickDeadZoneRightDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_JoystickDeadZoneRightDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Motion control settings.
        /// </summary>
        public static string ProfilesPage_MotionControlSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_MotionControlSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the global motion control settings.
        /// </summary>
        public static string ProfilesPage_MotionControlSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_MotionControlSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OK.
        /// </summary>
        public static string ProfilesPage_OK {
            get {
                return ResourceManager.GetString("ProfilesPage_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Power settings.
        /// </summary>
        public static string ProfilesPage_PowerSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_PowerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the power settings.
        /// </summary>
        public static string ProfilesPage_PowerSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_PowerSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile details.
        /// </summary>
        public static string ProfilesPage_ProfileDetails {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile name.
        /// </summary>
        public static string ProfilesPage_ProfileName {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile path.
        /// </summary>
        public static string ProfilesPage_ProfilePath {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profiles.
        /// </summary>
        public static string ProfilesPage_Profiles {
            get {
                return ResourceManager.GetString("ProfilesPage_Profiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile selection.
        /// </summary>
        public static string ProfilesPage_ProfileSelection {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the profile you would like to edit.
        /// </summary>
        public static string ProfilesPage_ProfileSelectionDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileSelectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile settings.
        /// </summary>
        public static string ProfilesPage_ProfileSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Profile updated.
        /// </summary>
        public static string ProfilesPage_ProfileUpdated1 {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileUpdated1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à was updated..
        /// </summary>
        public static string ProfilesPage_ProfileUpdated2 {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileUpdated2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Roll.
        /// </summary>
        public static string ProfilesPage_Roll {
            get {
                return ResourceManager.GetString("ProfilesPage_Roll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à X.
        /// </summary>
        public static string ProfilesPage_SensitivityX {
            get {
                return ResourceManager.GetString("ProfilesPage_SensitivityX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Y.
        /// </summary>
        public static string ProfilesPage_SensitivityY {
            get {
                return ResourceManager.GetString("ProfilesPage_SensitivityY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Style of input.
        /// </summary>
        public static string ProfilesPage_StyleofInput {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The physical inputs of the controller can be programmed to act like different types of devices.
        /// </summary>
        public static string ProfilesPage_StyleofInputTooltip {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Output device.
        /// </summary>
        public static string ProfilesPage_StyleofOutput {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the device that will receive the motion commands.
        /// </summary>
        public static string ProfilesPage_StyleofOutputTooltip {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sustained power limit.
        /// </summary>
        public static string ProfilesPage_SustainedPower {
            get {
                return ResourceManager.GetString("ProfilesPage_SustainedPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change sustained thermal power limit.
        /// </summary>
        public static string ProfilesPage_SustainedPowerDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_SustainedPowerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thermal Power (TDP) limit.
        /// </summary>
        public static string ProfilesPage_TDPOverride {
            get {
                return ResourceManager.GetString("ProfilesPage_TDPOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Limits processor power for less total power.
        /// </summary>
        public static string ProfilesPage_TDPOverrideDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_TDPOverrideDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Improve the stick circularity.
        /// </summary>
        public static string ProfilesPage_ThumbImproveCircularityDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ThumbImproveCircularityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Circularity stick left.
        /// </summary>
        public static string ProfilesPage_ThumbImproveCircularityLeft {
            get {
                return ResourceManager.GetString("ProfilesPage_ThumbImproveCircularityLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Circularity stick right.
        /// </summary>
        public static string ProfilesPage_ThumbImproveCircularityRight {
            get {
                return ResourceManager.GetString("ProfilesPage_ThumbImproveCircularityRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Left trigger deadzone %.
        /// </summary>
        public static string ProfilesPage_TriggerDeadZoneLeft {
            get {
                return ResourceManager.GetString("ProfilesPage_TriggerDeadZoneLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjust the inner and outer deadzone percentage of the left trigger.
        /// </summary>
        public static string ProfilesPage_TriggerDeadZoneLeftDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_TriggerDeadZoneLeftDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Right trigger deadzone %.
        /// </summary>
        public static string ProfilesPage_TriggerDeadZoneRight {
            get {
                return ResourceManager.GetString("ProfilesPage_TriggerDeadZoneRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjust the inner and outer deadzone percentage of the right trigger.
        /// </summary>
        public static string ProfilesPage_TriggerDeadZoneRightDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_TriggerDeadZoneRightDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Motion anti-deadzone.
        /// </summary>
        public static string ProfilesPage_UMCAntiDeadzone {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCAntiDeadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Compensate for in game deadzone, improve registration of small movements.
        /// </summary>
        public static string ProfilesPage_UMCAntiDeadzoneDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCAntiDeadzoneDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable universal motion controller.
        /// </summary>
        public static string ProfilesPage_UMCEnable {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled, turn on with button(s).
        /// </summary>
        public static string ProfilesPage_UMCMotionOff {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enabled, turn off with button(s).
        /// </summary>
        public static string ProfilesPage_UMCMotionOn {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Motion activation.
        /// </summary>
        public static string ProfilesPage_UMCMotionOnOff {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOnOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à With motion input disabled, use selected button(s) to enable motion, 
        ///with motion input enabled, use selected button(s) to disable motion..
        /// </summary>
        public static string ProfilesPage_UMCMotionOnOffDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOnOffDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the device that will receive the motion commands.
        /// </summary>
        public static string ProfilesPage_UMCSelectionRightLeftDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCSelectionRightLeftDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Universal motion control settings.
        /// </summary>
        public static string ProfilesPage_UMCSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Translate device motions into controller inputs.
        /// </summary>
        public static string ProfilesPage_UMCSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update profile.
        /// </summary>
        public static string ProfilesPage_UpdateProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_UpdateProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allow the application to access device physical controller.
        /// </summary>
        public static string ProfilesPage_Whitelist {
            get {
                return ResourceManager.GetString("ProfilesPage_Whitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extended compatibility (XInputPlus).
        /// </summary>
        public static string ProfilesPage_Wrapper {
            get {
                return ResourceManager.GetString("ProfilesPage_Wrapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yaw.
        /// </summary>
        public static string ProfilesPage_Yaw {
            get {
                return ResourceManager.GetString("ProfilesPage_Yaw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes.
        /// </summary>
        public static string ProfilesPage_Yes {
            get {
                return ResourceManager.GetString("ProfilesPage_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Properties.Resources.ControllerPage_Disconnect.
        /// </summary>
        public static string Properties_Resources_ControllerPage_Disconnect {
            get {
                return ResourceManager.GetString("Properties.Resources.ControllerPage_Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à FPS.
        /// </summary>
        public static string QuickPerformancePage_AutoTDPUnitFPS {
            get {
                return ResourceManager.GetString("QuickPerformancePage_AutoTDPUnitFPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manual GPU Clock Control.
        /// </summary>
        public static string QuickPerformancePage_GPUControl {
            get {
                return ResourceManager.GetString("QuickPerformancePage_GPUControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sets the GPU to a fixed clock.
        /// </summary>
        public static string QuickPerformancePage_GPUControlDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_GPUControlDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  MHz.
        /// </summary>
        public static string QuickPerformancePage_GPUUnit {
            get {
                return ResourceManager.GetString("QuickPerformancePage_GPUUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Power mode.
        /// </summary>
        public static string QuickPerformancePage_PowerMode {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Balanced.
        /// </summary>
        public static string QuickPerformancePage_PowerModeBalanced {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModeBalanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Optimize your device based on power use and performance.
        /// </summary>
        public static string QuickPerformancePage_PowerModeDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Efficiency.
        /// </summary>
        public static string QuickPerformancePage_PowerModeEfficiency {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModeEfficiency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Performance.
        /// </summary>
        public static string QuickPerformancePage_PowerModePerformance {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModePerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Boost.
        /// </summary>
        public static string QuickPerformancePage_TDPBoost {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPBoost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thermal Power (TDP) Limit.
        /// </summary>
        public static string QuickPerformancePage_TDPLimit {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Limits processor power for less total power.
        /// </summary>
        public static string QuickPerformancePage_TDPLimitDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPLimitDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thermal Power Limit is overwritten by a profile.
        /// </summary>
        public static string QuickPerformancePage_TDPOverWrittenWarning {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPOverWrittenWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sustained.
        /// </summary>
        public static string QuickPerformancePage_TDPSustained {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPSustained", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  W.
        /// </summary>
        public static string QuickPerformancePage_TDPUnitWatt {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPUnitWatt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create profile.
        /// </summary>
        public static string QuickProfilesPage_Create {
            get {
                return ResourceManager.GetString("QuickProfilesPage_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Waiting for foreground process....
        /// </summary>
        public static string QuickProfilesPage_Waiting {
            get {
                return ResourceManager.GetString("QuickProfilesPage_Waiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provides gyroscope and accelerometer support to Windows handheld gaming computers through a virtual controller. If the service is enabled, embedded controller will be cloaked to applications outside the whitelist. If the service is disabled, embedded controller will be uncloaked and the virtual controller disabled..
        /// </summary>
        public static string ServiceDescription {
            get {
                return ResourceManager.GetString("ServiceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller Service.
        /// </summary>
        public static string ServiceName {
            get {
                return ResourceManager.GetString("ServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Additional settings.
        /// </summary>
        public static string SettingsMode0_AdditionalSettings {
            get {
                return ResourceManager.GetString("SettingsMode0_AdditionalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Aiming down sights motion multiplier.
        /// </summary>
        public static string SettingsMode0_AimingDownSights {
            get {
                return ResourceManager.GetString("SettingsMode0_AimingDownSights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Activation button.
        /// </summary>
        public static string SettingsMode0_AimingDownSightsActivation {
            get {
                return ResourceManager.GetString("SettingsMode0_AimingDownSightsActivation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An additional motion sensitivity multiplier when aiming down sights or scope through the use of the configured activation button.
        /// </summary>
        public static string SettingsMode0_AimingDownSightsDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_AimingDownSightsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Multiplier value.
        /// </summary>
        public static string SettingsMode0_AimingDownSightsMultiplier {
            get {
                return ResourceManager.GetString("SettingsMode0_AimingDownSightsMultiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Camera options.
        /// </summary>
        public static string SettingsMode0_CameraOptions {
            get {
                return ResourceManager.GetString("SettingsMode0_CameraOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Custom response curve.
        /// </summary>
        public static string SettingsMode0_CustomResponseCurve {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponseCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Output sent to game.
        /// </summary>
        public static string SettingsMode0_CustomResponseCurveGameOutput {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponseCurveGameOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Movement intensity.
        /// </summary>
        public static string SettingsMode0_CustomResponseIntensity {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponseIntensity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Agressive.
        /// </summary>
        public static string SettingsMode0_CustomResponsePresetAgressive {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponsePresetAgressive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default.
        /// </summary>
        public static string SettingsMode0_CustomResponsePresetDefault {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponsePresetDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preset options.
        /// </summary>
        public static string SettingsMode0_CustomResponsePresetOptions {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponsePresetOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Precise.
        /// </summary>
        public static string SettingsMode0_CustomResponsePresetPrecise {
            get {
                return ResourceManager.GetString("SettingsMode0_CustomResponsePresetPrecise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Flick duration.
        /// </summary>
        public static string SettingsMode0_FlickDuration {
            get {
                return ResourceManager.GetString("SettingsMode0_FlickDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the flick duration, calibrate to 180 degree turn, in milliseconds.
        /// </summary>
        public static string SettingsMode0_FlickDurationDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_FlickDurationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Flick stick (experimental).
        /// </summary>
        public static string SettingsMode0_FlickStick {
            get {
                return ResourceManager.GetString("SettingsMode0_FlickStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Point camera in direction of (right) joystick flick, rotate camera purely in horizontal plane by rotating.
        /// </summary>
        public static string SettingsMode0_FlickStickDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_FlickStickDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable flick stick.
        /// </summary>
        public static string SettingsMode0_FlickStickEnable {
            get {
                return ResourceManager.GetString("SettingsMode0_FlickStickEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensitivity.
        /// </summary>
        public static string SettingsMode0_Sensitivity {
            get {
                return ResourceManager.GetString("SettingsMode0_Sensitivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the motion sensitivity of the horizontal and vertical axis.
        /// </summary>
        public static string SettingsMode0_SensitivityDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_SensitivityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensitivity X.
        /// </summary>
        public static string SettingsMode0_SensitivityX {
            get {
                return ResourceManager.GetString("SettingsMode0_SensitivityX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the motion sensitivity of the horizontal axis.
        /// </summary>
        public static string SettingsMode0_SensitivityXDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_SensitivityXDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensitivity Y.
        /// </summary>
        public static string SettingsMode0_SensitivityY {
            get {
                return ResourceManager.GetString("SettingsMode0_SensitivityY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the motion sensitivity of the vertical axis.
        /// </summary>
        public static string SettingsMode0_SensitivityYDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_SensitivityYDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Stick sensitivtity.
        /// </summary>
        public static string SettingsMode0_StickSensitivtity {
            get {
                return ResourceManager.GetString("SettingsMode0_StickSensitivtity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the rotation rate.
        /// </summary>
        public static string SettingsMode0_StickSensitivtityDesc {
            get {
                return ResourceManager.GetString("SettingsMode0_StickSensitivtityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Additional settings.
        /// </summary>
        public static string SettingsMode1_AdditionalSettings {
            get {
                return ResourceManager.GetString("SettingsMode1_AdditionalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Deadzone.
        /// </summary>
        public static string SettingsMode1_Deadzone {
            get {
                return ResourceManager.GetString("SettingsMode1_Deadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the steering deadzone, in degree. Improves steering straight.
        /// </summary>
        public static string SettingsMode1_DeadzoneDesc {
            get {
                return ResourceManager.GetString("SettingsMode1_DeadzoneDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick game Input.
        /// </summary>
        public static string SettingsMode1_JoystickGameInput {
            get {
                return ResourceManager.GetString("SettingsMode1_JoystickGameInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick steering.
        /// </summary>
        public static string SettingsMode1_JoystickSteering {
            get {
                return ResourceManager.GetString("SettingsMode1_JoystickSteering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick steering options.
        /// </summary>
        public static string SettingsMode1_JoystickSteeringOptions {
            get {
                return ResourceManager.GetString("SettingsMode1_JoystickSteeringOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joystick steering preview.
        /// </summary>
        public static string SettingsMode1_JoystickSteeringPreview {
            get {
                return ResourceManager.GetString("SettingsMode1_JoystickSteeringPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Max steering angle.
        /// </summary>
        public static string SettingsMode1_MaxSteeringAngle {
            get {
                return ResourceManager.GetString("SettingsMode1_MaxSteeringAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Change the maximum steering angle value, in degree.
        /// </summary>
        public static string SettingsMode1_MaxSteeringAngleDesc {
            get {
                return ResourceManager.GetString("SettingsMode1_MaxSteeringAngleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Steering linearity.
        /// </summary>
        public static string SettingsMode1_SteeringLinearity {
            get {
                return ResourceManager.GetString("SettingsMode1_SteeringLinearity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mapping between input and steering. Lower values provide more accuracy near full lock but less accuracy near the center. Higher values provide more accuracy near the center but less accuracy near full lock. 1.0 is a linear mapping.
        /// </summary>
        public static string SettingsMode1_SteeringLinearityDesc {
            get {
                return ResourceManager.GetString("SettingsMode1_SteeringLinearityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Language.
        /// </summary>
        public static string SettingsPage_AppLanguage {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application language.
        /// </summary>
        public static string SettingsPage_AppLanguageDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguageDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Restart required.
        /// </summary>
        public static string SettingsPage_AppLanguageWarning {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguageWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à In order for the changes to take effect, please restart the application.
        /// </summary>
        public static string SettingsPage_AppLanguageWarningDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguageWarningDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Application theme.
        /// </summary>
        public static string SettingsPage_AppTheme {
            get {
                return ResourceManager.GetString("SettingsPage_AppTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application theme, light or dark mode.
        /// </summary>
        public static string SettingsPage_AppThemeDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AppThemeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Auto-start application.
        /// </summary>
        public static string SettingsPage_AutoStartApp {
            get {
                return ResourceManager.GetString("SettingsPage_AutoStartApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application will start automatically when I sign in to Windows.
        /// </summary>
        public static string SettingsPage_AutoStartAppDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AutoStartAppDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Application backdrop.
        /// </summary>
        public static string SettingsPage_Backdrop {
            get {
                return ResourceManager.GetString("SettingsPage_Backdrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Acrylic.
        /// </summary>
        public static string SettingsPage_BackdropAcrylic {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropAcrylic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application backdrop, none, mica, tabbed, acrylic.
        /// </summary>
        public static string SettingsPage_BackdropDesc {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mica.
        /// </summary>
        public static string SettingsPage_BackdropMica {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropMica", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à None.
        /// </summary>
        public static string SettingsPage_BackdropNone {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tabbed.
        /// </summary>
        public static string SettingsPage_BackdropTabbed {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropTabbed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check for updates.
        /// </summary>
        public static string SettingsPage_CheckForUpdates {
            get {
                return ResourceManager.GetString("SettingsPage_CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close minimizes.
        /// </summary>
        public static string SettingsPage_CloseMinimizes {
            get {
                return ResourceManager.GetString("SettingsPage_CloseMinimizes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application will be minimized instead of closed.
        /// </summary>
        public static string SettingsPage_CloseMinimizesDesc {
            get {
                return ResourceManager.GetString("SettingsPage_CloseMinimizesDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Download.
        /// </summary>
        public static string SettingsPage_Download {
            get {
                return ResourceManager.GetString("SettingsPage_Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Downloading - .
        /// </summary>
        public static string SettingsPage_DownloadingPercentage {
            get {
                return ResourceManager.GetString("SettingsPage_DownloadingPercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Smart efficiency.
        /// </summary>
        public static string SettingsPage_EcoQoS {
            get {
                return ResourceManager.GetString("SettingsPage_EcoQoS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Smart efficiency mode reduces the priority of background processes and improves energy efficiency.
        /// </summary>
        public static string SettingsPage_EcoQoSDesc {
            get {
                return ResourceManager.GetString("SettingsPage_EcoQoSDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à General options.
        /// </summary>
        public static string SettingsPage_GeneralOptions {
            get {
                return ResourceManager.GetString("SettingsPage_GeneralOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Halt with Companion.
        /// </summary>
        public static string SettingsPage_HaltWithCompanion {
            get {
                return ResourceManager.GetString("SettingsPage_HaltWithCompanion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatically turn off service when companion is closed.
        /// </summary>
        public static string SettingsPage_HaltWithCompanionDesc {
            get {
                return ResourceManager.GetString("SettingsPage_HaltWithCompanionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install now.
        /// </summary>
        public static string SettingsPage_InstallNow {
            get {
                return ResourceManager.GetString("SettingsPage_InstallNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Last checked: .
        /// </summary>
        public static string SettingsPage_LastChecked {
            get {
                return ResourceManager.GetString("SettingsPage_LastChecked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notification options.
        /// </summary>
        public static string SettingsPage_NotificationOptions {
            get {
                return ResourceManager.GetString("SettingsPage_NotificationOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open application in background.
        /// </summary>
        public static string SettingsPage_OpenAppBackground {
            get {
                return ResourceManager.GetString("SettingsPage_OpenAppBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application will initially start minimized and appear on the taskbar.
        /// </summary>
        public static string SettingsPage_OpenAppBackgroundDesc {
            get {
                return ResourceManager.GetString("SettingsPage_OpenAppBackgroundDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External.
        /// </summary>
        public static string SettingsPage_SensorExternal {
            get {
                return ResourceManager.GetString("SettingsPage_SensorExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Internal.
        /// </summary>
        public static string SettingsPage_SensorInternal {
            get {
                return ResourceManager.GetString("SettingsPage_SensorInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor options.
        /// </summary>
        public static string SettingsPage_SensorOptions {
            get {
                return ResourceManager.GetString("SettingsPage_SensorOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External sensor placement direction.
        /// </summary>
        public static string SettingsPage_SensorPlacementDirection {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select on which side of the device the senor has been mounted.
        /// </summary>
        public static string SettingsPage_SensorPlacementDirectionDesc {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementDirectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External sensor upside down.
        /// </summary>
        public static string SettingsPage_SensorPlacementUpsideDown {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementUpsideDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor has been mounted upside down, possible with USB-C convertor.
        /// </summary>
        public static string SettingsPage_SensorPlacementUpsideDownDesc {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementUpsideDownDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sensor selection.
        /// </summary>
        public static string SettingsPage_SensorSelection {
            get {
                return ResourceManager.GetString("SettingsPage_SensorSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the desired sensor used for motion input.
        /// </summary>
        public static string SettingsPage_SensorSelectionDesc {
            get {
                return ResourceManager.GetString("SettingsPage_SensorSelectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Service options.
        /// </summary>
        public static string SettingsPage_ServiceOptions {
            get {
                return ResourceManager.GetString("SettingsPage_ServiceOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Settings.
        /// </summary>
        public static string SettingsPage_Settings {
            get {
                return ResourceManager.GetString("SettingsPage_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Startup type.
        /// </summary>
        public static string SettingsPage_StartupType {
            get {
                return ResourceManager.GetString("SettingsPage_StartupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Used by the service manager to define the service startup type.
        /// </summary>
        public static string SettingsPage_StartupTypeDesc {
            get {
                return ResourceManager.GetString("SettingsPage_StartupTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start with Companion.
        /// </summary>
        public static string SettingsPage_StartWithCompanion {
            get {
                return ResourceManager.GetString("SettingsPage_StartWithCompanion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatically turn on service when companion starts.
        /// </summary>
        public static string SettingsPage_StartWithCompanionDesc {
            get {
                return ResourceManager.GetString("SettingsPage_StartWithCompanionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Maximum Power.
        /// </summary>
        public static string SettingsPage_TDPMax {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The maximum power in watts supplied to the processor.
        /// </summary>
        public static string SettingsPage_TDPMaxDesc {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMaxDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Minimum Power.
        /// </summary>
        public static string SettingsPage_TDPMin {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The minimum power in watts supplied to the processor.
        /// </summary>
        public static string SettingsPage_TDPMinDesc {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMinDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configurable power (cTDP) override.
        /// </summary>
        public static string SettingsPage_TDPRangeOverride {
            get {
                return ResourceManager.GetString("SettingsPage_TDPRangeOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allows to modify the minimum and maximum power values (TDP) beyond the CPU specifications.
        /// </summary>
        public static string SettingsPage_TDPRangeOverrideDesc {
            get {
                return ResourceManager.GetString("SettingsPage_TDPRangeOverrideDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dark.
        /// </summary>
        public static string SettingsPage_ThemeDark {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Light.
        /// </summary>
        public static string SettingsPage_ThemeLight {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Toast notification.
        /// </summary>
        public static string SettingsPage_ToastNotification {
            get {
                return ResourceManager.GetString("SettingsPage_ToastNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Get notifications from the application in the Windows action center.
        /// </summary>
        public static string SettingsPage_ToastNotificationDesc {
            get {
                return ResourceManager.GetString("SettingsPage_ToastNotificationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Updates available.
        /// </summary>
        public static string SettingsPage_UpdateAvailable {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking for updates....
        /// </summary>
        public static string SettingsPage_UpdateCheck {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à We couldn&apos;t download the update file..
        /// </summary>
        public static string SettingsPage_UpdateFailedDownload {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateFailedDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à We couldn&apos;t reach github..
        /// </summary>
        public static string SettingsPage_UpdateFailedGithub {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateFailedGithub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à We couldn&apos;t locate the update file..
        /// </summary>
        public static string SettingsPage_UpdateFailedInstall {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateFailedInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Oups. There was an issue..
        /// </summary>
        public static string SettingsPage_UpdateWarning {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You&apos;re up to date.
        /// </summary>
        public static string SettingsPage_UpToDate {
            get {
                return ResourceManager.GetString("SettingsPage_UpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Controller is now cloaked and inputs forwarded to virtual controller.
        /// </summary>
        public static string ToastNewControllerEx {
            get {
                return ResourceManager.GetString("ToastNewControllerEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User.
        /// </summary>
        public static string User {
            get {
                return ResourceManager.GetString("User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Run this tool as Administrator to unlock these settings.
        /// </summary>
        public static string WarningElevated {
            get {
                return ResourceManager.GetString("WarningElevated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] xinput1_x64 {
            get {
                object obj = ResourceManager.GetObject("xinput1_x64", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une ressource localisée de type System.Byte[].
        /// </summary>
        public static byte[] xinput1_x86 {
            get {
                object obj = ResourceManager.GetObject("xinput1_x86", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à [General]
        ///iniFileVersion=4150
        ///[KeyAssign]
        ///LS=LS
        ///RS=RS
        ///LT=LT
        ///RT=RT
        ///DPAD_UP=DPAD_UP
        ///DPAD_DOWN=DPAD_DOWN
        ///DPAD_LEFT=DPAD_LEFT
        ///DPAD_RIGHT=DPAD_RIGHT
        ///A=A
        ///B=B
        ///X=X
        ///Y=Y
        ///LB=LB
        ///RB=RB
        ///LSB=LSB
        ///RSB=RSB
        ///BACK=BACK
        ///START=START
        ///GUIDE=GUIDE
        ///ThresholdA2D=40
        ///DPAD4Direction=False
        ///[LeftStick]
        ///DeadZone=0
        ///Saturation=32767
        ///Linearity=1
        ///Response=32767
        ///RectCorrection=0
        ///Scale=1
        ///CenterOffsetX=0
        ///CenterOffsetY=0
        ///InvertX=False
        ///InvertY=False
        ///DisableX=False
        ///DisableY=False
        ///[RightStick]
        ///DeadZone=0
        ///Saturati [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string XInputPlus {
            get {
                return ResourceManager.GetString("XInputPlus", resourceCulture);
            }
        }
    }
}
