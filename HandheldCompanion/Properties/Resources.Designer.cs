//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HandheldCompanion.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HandheldCompanion.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string AboutPage_About {
            get {
                return ResourceManager.GetString("AboutPage_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handheld Companion provides gyroscope and accelerometer support to the AYA NEO 2020 and 2021 models through a virtual DualShock 4 controller. If the service is enabled, embedded controller will be cloaked to applications outside the whitelist. If the service is disabled, embedded controller will be uncloaked and virtual DualShock 4 controller disabled. Handheld Companion relies on ViGEmBus driver and ViGEmClient libraries as well as HidHide kernel-mode filter driver. Motion control algorithms are based on w [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AboutPage_AboutDescription {
            get {
                return ResourceManager.GetString("AboutPage_AboutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accelerometer.
        /// </summary>
        public static string AboutPage_Accelerometer {
            get {
                return ResourceManager.GetString("AboutPage_Accelerometer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author.
        /// </summary>
        public static string AboutPage_Author {
            get {
                return ResourceManager.GetString("AboutPage_Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contributors.
        /// </summary>
        public static string AboutPage_Contributors {
            get {
                return ResourceManager.GetString("AboutPage_Contributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string AboutPage_Description {
            get {
                return ResourceManager.GetString("AboutPage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Donate.
        /// </summary>
        public static string AboutPage_Donate {
            get {
                return ResourceManager.GetString("AboutPage_Donate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gyrometer.
        /// </summary>
        public static string AboutPage_Gyrometer {
            get {
                return ResourceManager.GetString("AboutPage_Gyrometer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inclinometer.
        /// </summary>
        public static string AboutPage_Inclinometer {
            get {
                return ResourceManager.GetString("AboutPage_Inclinometer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to N/A.
        /// </summary>
        public static string AboutPage_NotApplicable {
            get {
                return ResourceManager.GetString("AboutPage_NotApplicable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Related Links.
        /// </summary>
        public static string AboutPage_RelatedLinks {
            get {
                return ResourceManager.GetString("AboutPage_RelatedLinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External.
        /// </summary>
        public static string AboutPage_SensorExternal {
            get {
                return ResourceManager.GetString("AboutPage_SensorExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal.
        /// </summary>
        public static string AboutPage_SensorInternal {
            get {
                return ResourceManager.GetString("AboutPage_SensorInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensor name.
        /// </summary>
        public static string AboutPage_SensorName {
            get {
                return ResourceManager.GetString("AboutPage_SensorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensor specification.
        /// </summary>
        public static string AboutPage_SensorSpecification {
            get {
                return ResourceManager.GetString("AboutPage_SensorSpecification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service.
        /// </summary>
        public static string AboutPage_Service {
            get {
                return ResourceManager.GetString("AboutPage_Service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source code.
        /// </summary>
        public static string AboutPage_SourceCode {
            get {
                return ResourceManager.GetString("AboutPage_SourceCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string AboutPage_Version {
            get {
                return ResourceManager.GetString("AboutPage_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wiki.
        /// </summary>
        public static string AboutPage_Wiki {
            get {
                return ResourceManager.GetString("AboutPage_Wiki", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator.
        /// </summary>
        public static string Administrator {
            get {
                return ResourceManager.GetString("Administrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;name&quot;: &quot;ControllerCompanion&quot;,
        ///  &quot;path&quot;: &quot;ControllerCompanion.exe&quot;,
        ///  &quot;executable&quot;: &quot;ControllerCompanion.exe&quot;,
        ///  &quot;isEnabled&quot;: true,
        ///  &quot;whitelisted&quot;: true
        ///}.
        /// </summary>
        public static string ControllerCompanion_json {
            get {
                return ResourceManager.GetString("ControllerCompanion.json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cloak device.
        /// </summary>
        public static string ControllerPage_CloakDevice {
            get {
                return ResourceManager.GetString("ControllerPage_CloakDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the physical controller visibility to other applications.
        /// </summary>
        public static string ControllerPage_CloakDeviceDesc {
            get {
                return ResourceManager.GetString("ControllerPage_CloakDeviceDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect.
        /// </summary>
        public static string ControllerPage_Connect {
            get {
                return ResourceManager.GetString("ControllerPage_Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller.
        /// </summary>
        public static string ControllerPage_Controller {
            get {
                return ResourceManager.GetString("ControllerPage_Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device cloaking.
        /// </summary>
        public static string ControllerPage_DeviceCloaking {
            get {
                return ResourceManager.GetString("ControllerPage_DeviceCloaking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnect.
        /// </summary>
        public static string ControllerPage_Disconnect {
            get {
                return ResourceManager.GetString("ControllerPage_Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input devices.
        /// </summary>
        public static string ControllerPage_InputDevices {
            get {
                return ResourceManager.GetString("ControllerPage_InputDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uncloak on close.
        /// </summary>
        public static string ControllerPage_UncloakOnClose {
            get {
                return ResourceManager.GetString("ControllerPage_UncloakOnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore visibility of the physical controller to other applications on service exit.
        /// </summary>
        public static string ControllerPage_UncloakOnCloseDesc {
            get {
                return ResourceManager.GetString("ControllerPage_UncloakOnCloseDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vibration strength.
        /// </summary>
        public static string ControllerPage_VibrationStrength {
            get {
                return ResourceManager.GetString("ControllerPage_VibrationStrength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change controller vibration strength.
        /// </summary>
        public static string ControllerPage_VibrationStrengthExpl {
            get {
                return ResourceManager.GetString("ControllerPage_VibrationStrengthExpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;name&quot;: &quot;Default&quot;,
        ///  &quot;path&quot;: &quot;&quot;,
        ///  &quot;executable&quot;: &quot;Default.exe&quot;,
        ///  &quot;isDefault&quot;: true,
        ///  &quot;isEnabled&quot;: true,
        ///  &quot;whitelisted&quot;: false,
        ///  &quot;umc_enabled&quot;: false
        ///}.
        /// </summary>
        public static string Default_json {
            get {
                return ResourceManager.GetString("Default.json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icon {
            get {
                object obj = ResourceManager.GetObject("icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrease thermal power limit (TDP).
        /// </summary>
        public static string InputsHotkey_decreaseTDP {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseTDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrease system or currently applied profile TDP by one watt.
        /// </summary>
        public static string InputsHotkey_decreaseTDPDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_decreaseTDPDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press to define hotkey input.
        /// </summary>
        public static string InputsHotkey_fallbackInput {
            get {
                return ResourceManager.GetString("InputsHotkey_fallbackInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press to define keyboard output.
        /// </summary>
        public static string InputsHotkey_fallbackOutput {
            get {
                return ResourceManager.GetString("InputsHotkey_fallbackOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increase thermal power limit (TDP).
        /// </summary>
        public static string InputsHotkey_increaseTDP {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseTDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increase system or currently applied profile TDP by one watt.
        /// </summary>
        public static string InputsHotkey_increaseTDPDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_increaseTDPDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display 3D controller.
        /// </summary>
        public static string InputsHotkey_overlayGamepad {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayGamepad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change 3D hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_overlayGamepadDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayGamepadDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display virtual trackpads.
        /// </summary>
        public static string InputsHotkey_overlayTrackpads {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayTrackpads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_overlayTrackpadsDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_overlayTrackpadsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Summon quick tools window.
        /// </summary>
        public static string InputsHotkey_quickTools {
            get {
                return ResourceManager.GetString("InputsHotkey_quickTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_quickToolsDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_quickToolsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom shortcut.
        /// </summary>
        public static string InputsHotkey_shortcutCustom {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutCustomDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutCustomDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display and hide the desktop.
        /// </summary>
        public static string InputsHotkey_shortcutDesktop {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutDesktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press this key: Windows + D.
        /// </summary>
        public static string InputsHotkey_shortcutDesktopDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutDesktopDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Escape.
        /// </summary>
        public static string InputsHotkey_shortcutESC {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press this key: Escape.
        /// </summary>
        public static string InputsHotkey_shortcutESCDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutESCDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switches between window and full screen.
        /// </summary>
        public static string InputsHotkey_shortcutExpand {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutExpand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press this key: Alt + Enter.
        /// </summary>
        public static string InputsHotkey_shortcutExpandDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutExpandDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Guide or PS button.
        /// </summary>
        public static string InputsHotkey_shortcutGuide {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simulate a Xbox Guide or Sony PS button input.
        /// </summary>
        public static string InputsHotkey_shortcutGuideDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutGuideDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display touch keyboard.
        /// </summary>
        public static string InputsHotkey_shortcutKeyboard {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKeyboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutKeyboardDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKeyboardDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force application shutdown.
        /// </summary>
        public static string InputsHotkey_shortcutKillApp {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKillApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutKillAppDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutKillAppDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display and hide main window.
        /// </summary>
        public static string InputsHotkey_shortcutMainwindow {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutMainwindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change hotkey by pressing a button or a special key.
        /// </summary>
        public static string InputsHotkey_shortcutMainwindowDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutMainwindowDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Task Manager.
        /// </summary>
        public static string InputsHotkey_shortcutTaskManager {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press this key: Ctrl + Shift + Esc.
        /// </summary>
        public static string InputsHotkey_shortcutTaskManagerDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskManagerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Task view.
        /// </summary>
        public static string InputsHotkey_shortcutTaskview {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press this key: Windows + Tab.
        /// </summary>
        public static string InputsHotkey_shortcutTaskviewDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_shortcutTaskviewDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle Suspender.
        /// </summary>
        public static string InputsHotkey_suspendResumeTask {
            get {
                return ResourceManager.GetString("InputsHotkey_suspendResumeTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suspend or resume the foreground application.
        /// </summary>
        public static string InputsHotkey_suspendResumeTaskDesc {
            get {
                return ResourceManager.GetString("InputsHotkey_suspendResumeTaskDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;name&quot;: &quot;Joyxoff&quot;,
        ///  &quot;path&quot;: &quot;Joyxoff.exe&quot;,
        ///  &quot;executable&quot;: &quot;Joyxoff.exe&quot;,
        ///  &quot;isEnabled&quot;: true,
        ///  &quot;whitelisted&quot;: true
        ///}.
        /// </summary>
        public static string JoyXOff_json {
            get {
                return ResourceManager.GetString("JoyXOff.json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handheld Companion.
        /// </summary>
        public static string MainWindow_HandheldCompanion {
            get {
                return ResourceManager.GetString("MainWindow_HandheldCompanion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string MainWindow_navAbout {
            get {
                return ResourceManager.GetString("MainWindow_navAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller.
        /// </summary>
        public static string MainWindow_navController {
            get {
                return ResourceManager.GetString("MainWindow_navController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay.
        /// </summary>
        public static string MainWindow_navOverlay {
            get {
                return ResourceManager.GetString("MainWindow_navOverlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profiles.
        /// </summary>
        public static string MainWindow_navProfiles {
            get {
                return ResourceManager.GetString("MainWindow_navProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string MainWindow_OK {
            get {
                return ResourceManager.GetString("MainWindow_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploy service.
        /// </summary>
        public static string MainWindow_serviceDeploy {
            get {
                return ResourceManager.GetString("MainWindow_serviceDeploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service manager.
        /// </summary>
        public static string MainWindow_ServiceManager {
            get {
                return ResourceManager.GetString("MainWindow_ServiceManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oups. There was an issue while we tried to start the service..
        /// </summary>
        public static string MainWindow_ServiceManagerStartIssue {
            get {
                return ResourceManager.GetString("MainWindow_ServiceManagerStartIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oups. There was an issue while we tried to stop the service..
        /// </summary>
        public static string MainWindow_ServiceManagerStopIssue {
            get {
                return ResourceManager.GetString("MainWindow_ServiceManagerStopIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove service.
        /// </summary>
        public static string MainWindow_serviceRemove {
            get {
                return ResourceManager.GetString("MainWindow_serviceRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start service.
        /// </summary>
        public static string MainWindow_serviceStart {
            get {
                return ResourceManager.GetString("MainWindow_serviceStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop service.
        /// </summary>
        public static string MainWindow_serviceStop {
            get {
                return ResourceManager.GetString("MainWindow_serviceStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string MainWindow_Settings {
            get {
                return ResourceManager.GetString("MainWindow_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay.
        /// </summary>
        public static string Overlay_Overlay {
            get {
                return ResourceManager.GetString("Overlay_Overlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 8BitDo Lite 2.
        /// </summary>
        public static string OverlayPage_8BitDoLite2Controller {
            get {
                return ResourceManager.GetString("OverlayPage_8BitDoLite2Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alignment.
        /// </summary>
        public static string OverlayPage_Alignment {
            get {
                return ResourceManager.GetString("OverlayPage_Alignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change 3D controller overlay alignment.
        /// </summary>
        public static string OverlayPage_AlignmentDesc {
            get {
                return ResourceManager.GetString("OverlayPage_AlignmentDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change trackpads overlay alignment.
        /// </summary>
        public static string OverlayPage_AlignmentTrackpadDesc {
            get {
                return ResourceManager.GetString("OverlayPage_AlignmentTrackpadDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always on top.
        /// </summary>
        public static string OverlayPage_AlwaysOnTop {
            get {
                return ResourceManager.GetString("OverlayPage_AlwaysOnTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When toggled, 3D controller overlay will stay on top of other windows.
        /// </summary>
        public static string OverlayPage_AlwaysOnTopDesc {
            get {
                return ResourceManager.GetString("OverlayPage_AlwaysOnTopDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back.
        /// </summary>
        public static string OverlayPage_BackButton {
            get {
                return ResourceManager.GetString("OverlayPage_BackButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Face camera.
        /// </summary>
        public static string OverlayPage_CameraAngle {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change 3D controller overlay model behaviour for facing the camera.
        /// </summary>
        public static string OverlayPage_CameraAngleDesc {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAngleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stationary pitch.
        /// </summary>
        public static string OverlayPage_CameraAnglePitch {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAnglePitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the angle, in degree.
        /// </summary>
        public static string OverlayPage_CameraAnglePitchDesc {
            get {
                return ResourceManager.GetString("OverlayPage_CameraAnglePitchDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background Color.
        /// </summary>
        public static string OverlayPage_Color {
            get {
                return ResourceManager.GetString("OverlayPage_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change 3D controller overlay background color.
        /// </summary>
        public static string OverlayPage_ColorDesc {
            get {
                return ResourceManager.GetString("OverlayPage_ColorDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller options.
        /// </summary>
        public static string OverlayPage_ControllerOptions {
            get {
                return ResourceManager.GetString("OverlayPage_ControllerOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playstation DualSense.
        /// </summary>
        public static string OverlayPage_DualSenseController {
            get {
                return ResourceManager.GetString("OverlayPage_DualSenseController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emulated controller.
        /// </summary>
        public static string OverlayPage_EmulatedController {
            get {
                return ResourceManager.GetString("OverlayPage_EmulatedController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Face camera.
        /// </summary>
        public static string OverlayPage_FaceCamera {
            get {
                return ResourceManager.GetString("OverlayPage_FaceCamera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3D Model slowly rotates to face camera as default position.
        /// </summary>
        public static string OverlayPage_FaceCameraDesc {
            get {
                return ResourceManager.GetString("OverlayPage_FaceCameraDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listening....
        /// </summary>
        public static string OverlayPage_Listening {
            get {
                return ResourceManager.GetString("OverlayPage_Listening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MACHENIKE HG510.
        /// </summary>
        public static string OverlayPage_MachenikeHG510Controller {
            get {
                return ResourceManager.GetString("OverlayPage_MachenikeHG510Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main trigger.
        /// </summary>
        public static string OverlayPage_MainTrigger {
            get {
                return ResourceManager.GetString("OverlayPage_MainTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change 3D controller overlay main trigger.
        /// </summary>
        public static string OverlayPage_MainTriggerDesc {
            get {
                return ResourceManager.GetString("OverlayPage_MainTriggerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to N64.
        /// </summary>
        public static string OverlayPage_N64Controller {
            get {
                return ResourceManager.GetString("OverlayPage_N64Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OEM controller.
        /// </summary>
        public static string OverlayPage_OEMController {
            get {
                return ResourceManager.GetString("OverlayPage_OEMController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opacity.
        /// </summary>
        public static string OverlayPage_Opacity {
            get {
                return ResourceManager.GetString("OverlayPage_Opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change 3D controller overlay opacity.
        /// </summary>
        public static string OverlayPage_OpacityControllerDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OpacityControllerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change trackpads overlay opacity.
        /// </summary>
        public static string OverlayPage_OpacityTrackpadDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OpacityTrackpadDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay.
        /// </summary>
        public static string OverlayPage_Overlay {
            get {
                return ResourceManager.GetString("OverlayPage_Overlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay model.
        /// </summary>
        public static string OverlayPage_OverlayModel {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change 3D controller overlay model.
        /// </summary>
        public static string OverlayPage_OverlayModelDesc {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayModelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay preview.
        /// </summary>
        public static string OverlayPage_OverlayPreview {
            get {
                return ResourceManager.GetString("OverlayPage_OverlayPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Render settings.
        /// </summary>
        public static string OverlayPage_RenderSettings {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-Aliasing.
        /// </summary>
        public static string OverlayPage_RenderSettingsAntialiasing {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsAntialiasing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the render anti-aliasing status.
        /// </summary>
        public static string OverlayPage_RenderSettingsAntialiasingDesc {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsAntialiasingDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the render settings of your stationary 3D overlay controller model.
        /// </summary>
        public static string OverlayPage_RenderSettingsDesc {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update rate.
        /// </summary>
        public static string OverlayPage_RenderSettingsFramerate {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsFramerate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the render update rate, in update per second.
        /// </summary>
        public static string OverlayPage_RenderSettingsFramerateDesc {
            get {
                return ResourceManager.GetString("OverlayPage_RenderSettingsFramerateDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size.
        /// </summary>
        public static string OverlayPage_Size {
            get {
                return ResourceManager.GetString("OverlayPage_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change 3D controller overlay size.
        /// </summary>
        public static string OverlayPage_SizeDesc {
            get {
                return ResourceManager.GetString("OverlayPage_SizeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change trackpads overlay size.
        /// </summary>
        public static string OverlayPage_SizeOverlayDesc {
            get {
                return ResourceManager.GetString("OverlayPage_SizeOverlayDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string OverlayPage_StartButton {
            get {
                return ResourceManager.GetString("OverlayPage_StartButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fisher-Price controller.
        /// </summary>
        public static string OverlayPage_ToyController {
            get {
                return ResourceManager.GetString("OverlayPage_ToyController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trackpads options.
        /// </summary>
        public static string OverlayPage_TrackpadsOptions {
            get {
                return ResourceManager.GetString("OverlayPage_TrackpadsOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xbox One.
        /// </summary>
        public static string OverlayPage_XboxOneController {
            get {
                return ResourceManager.GetString("OverlayPage_XboxOneController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZD O+.
        /// </summary>
        public static string OverlayPage_ZDOPlusController {
            get {
                return ResourceManager.GetString("OverlayPage_ZDOPlusController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;name&quot;: &quot;Playnite.FullscreenApp&quot;,
        ///  &quot;path&quot;: &quot;Playnite.FullscreenApp.exe&quot;,
        ///  &quot;executable&quot;: &quot;Playnite.FullscreenApp.exe&quot;,
        ///  &quot;isEnabled&quot;: true,
        ///  &quot;whitelisted&quot;: true
        ///}.
        /// </summary>
        public static string Playnite_FullscreenApp_json {
            get {
                return ResourceManager.GetString("Playnite.FullscreenApp.json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;name&quot;: &quot;Power Control Panel&quot;,
        ///  &quot;path&quot;: &quot;Power Control Panel.exe&quot;,
        ///  &quot;executable&quot;: &quot;Power Control Panel.exe&quot;,
        ///  &quot;isEnabled&quot;: true,
        ///  &quot;whitelisted&quot;: true
        ///}
        ///.
        /// </summary>
        public static string PowerControlPanel_json {
            get {
                return ResourceManager.GetString("PowerControlPanel.json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resume.
        /// </summary>
        public static string ProcessEx_processResume {
            get {
                return ResourceManager.GetString("ProcessEx_processResume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suspend.
        /// </summary>
        public static string ProcessEx_processSuspend {
            get {
                return ResourceManager.GetString("ProcessEx_processSuspend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional settings.
        /// </summary>
        public static string ProfileSettingsMode0_AdditionalSettings {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_AdditionalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aiming down sights motion multiplier.
        /// </summary>
        public static string ProfileSettingsMode0_AimingDownSights {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_AimingDownSights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activation button.
        /// </summary>
        public static string ProfileSettingsMode0_AimingDownSightsActivation {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_AimingDownSightsActivation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An additional motion sensitivity multiplier when aiming down sights or scope through the use of the configured activation button.
        /// </summary>
        public static string ProfileSettingsMode0_AimingDownSightsDesc {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_AimingDownSightsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiplier value.
        /// </summary>
        public static string ProfileSettingsMode0_AimingDownSightsMultiplier {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_AimingDownSightsMultiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera options.
        /// </summary>
        public static string ProfileSettingsMode0_CameraOptions {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_CameraOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom response curve.
        /// </summary>
        public static string ProfileSettingsMode0_CustomResponseCurve {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_CustomResponseCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output sent to game.
        /// </summary>
        public static string ProfileSettingsMode0_CustomResponseCurveGameOutput {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_CustomResponseCurveGameOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Movement intensity.
        /// </summary>
        public static string ProfileSettingsMode0_CustomResponseIntensity {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_CustomResponseIntensity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agressive.
        /// </summary>
        public static string ProfileSettingsMode0_CustomResponsePresetAgressive {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_CustomResponsePresetAgressive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string ProfileSettingsMode0_CustomResponsePresetDefault {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_CustomResponsePresetDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preset options.
        /// </summary>
        public static string ProfileSettingsMode0_CustomResponsePresetOptions {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_CustomResponsePresetOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precise.
        /// </summary>
        public static string ProfileSettingsMode0_CustomResponsePresetPrecise {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_CustomResponsePresetPrecise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flick duration.
        /// </summary>
        public static string ProfileSettingsMode0_FlickDuration {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_FlickDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the flick duration, calibrate to 180 degree turn, in milliseconds.
        /// </summary>
        public static string ProfileSettingsMode0_FlickDurationDesc {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_FlickDurationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flick stick (experimental).
        /// </summary>
        public static string ProfileSettingsMode0_FlickStick {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_FlickStick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point camera in direction of (right) joystick flick, rotate camera purely in horizontal plane by rotating.
        /// </summary>
        public static string ProfileSettingsMode0_FlickStickDesc {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_FlickStickDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable flick stick.
        /// </summary>
        public static string ProfileSettingsMode0_FlickStickEnable {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_FlickStickEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensitivity.
        /// </summary>
        public static string ProfileSettingsMode0_Sensitivity {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_Sensitivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the motion sensitivity of the horizontal and vertical axis.
        /// </summary>
        public static string ProfileSettingsMode0_SensitivityDesc {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_SensitivityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensitivity X.
        /// </summary>
        public static string ProfileSettingsMode0_SensitivityX {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_SensitivityX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the motion sensitivity of the horizontal axis.
        /// </summary>
        public static string ProfileSettingsMode0_SensitivityXDesc {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_SensitivityXDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensitivity Y.
        /// </summary>
        public static string ProfileSettingsMode0_SensitivityY {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_SensitivityY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the motion sensitivity of the vertical axis.
        /// </summary>
        public static string ProfileSettingsMode0_SensitivityYDesc {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_SensitivityYDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stick sensitivtity.
        /// </summary>
        public static string ProfileSettingsMode0_StickSensitivtity {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_StickSensitivtity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the rotation rate.
        /// </summary>
        public static string ProfileSettingsMode0_StickSensitivtityDesc {
            get {
                return ResourceManager.GetString("ProfileSettingsMode0_StickSensitivtityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional settings.
        /// </summary>
        public static string ProfileSettingsMode1_AdditionalSettings {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_AdditionalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deadzone.
        /// </summary>
        public static string ProfileSettingsMode1_Deadzone {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_Deadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the steering deadzone, in degree. Improves steering straight.
        /// </summary>
        public static string ProfileSettingsMode1_DeadzoneDesc {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_DeadzoneDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Joystick game Input.
        /// </summary>
        public static string ProfileSettingsMode1_JoystickGameInput {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_JoystickGameInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Joystick steering.
        /// </summary>
        public static string ProfileSettingsMode1_JoystickSteering {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_JoystickSteering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Joystick steering options.
        /// </summary>
        public static string ProfileSettingsMode1_JoystickSteeringOptions {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_JoystickSteeringOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Joystick steering preview.
        /// </summary>
        public static string ProfileSettingsMode1_JoystickSteeringPreview {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_JoystickSteeringPreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max steering angle.
        /// </summary>
        public static string ProfileSettingsMode1_MaxSteeringAngle {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_MaxSteeringAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the maximum steering angle value, in degree.
        /// </summary>
        public static string ProfileSettingsMode1_MaxSteeringAngleDesc {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_MaxSteeringAngleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steering linearity.
        /// </summary>
        public static string ProfileSettingsMode1_SteeringLinearity {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_SteeringLinearity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mapping between input and steering. Lower values provide more accuracy near full lock but less accuracy near the center. Higher values provide more accuracy near the center but less accuracy near full lock. 1.0 is a linear mapping.
        /// </summary>
        public static string ProfileSettingsMode1_SteeringLinearityDesc {
            get {
                return ResourceManager.GetString("ProfileSettingsMode1_SteeringLinearityDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accelerometer multiplier.
        /// </summary>
        public static string ProfilesPage_AccelerometerMultiplier {
            get {
                return ResourceManager.GetString("ProfilesPage_AccelerometerMultiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the system reported accelerometer value.
        /// </summary>
        public static string ProfilesPage_AccelerometerMultiplierDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_AccelerometerMultiplierDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional settings.
        /// </summary>
        public static string ProfilesPage_AdditionalSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_AdditionalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-deadzone.
        /// </summary>
        public static string ProfilesPage_AntiDeadzone {
            get {
                return ResourceManager.GetString("ProfilesPage_AntiDeadzone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the in-game anti-deadzone, in percentage.
        /// </summary>
        public static string ProfilesPage_AntiDeadzoneDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_AntiDeadzoneDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  %.
        /// </summary>
        public static string ProfilesPage_AntiDeadzoneUnitPercentage {
            get {
                return ResourceManager.GetString("ProfilesPage_AntiDeadzoneUnitPercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete?.
        /// </summary>
        public static string ProfilesPage_AreYouSureDelete1 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureDelete1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This item will be deleted immediatly. You can&apos;t undo this action..
        /// </summary>
        public static string ProfilesPage_AreYouSureDelete2 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureDelete2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to overwrite?.
        /// </summary>
        public static string ProfilesPage_AreYouSureOverwrite1 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureOverwrite1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This item will be overwriten. You can&apos;t undo this action..
        /// </summary>
        public static string ProfilesPage_AreYouSureOverwrite2 {
            get {
                return ResourceManager.GetString("ProfilesPage_AreYouSureOverwrite2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boost power limit.
        /// </summary>
        public static string ProfilesPage_BoostPower {
            get {
                return ResourceManager.GetString("ProfilesPage_BoostPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change boost thermal power limit.
        /// </summary>
        public static string ProfilesPage_BoostPowerDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_BoostPowerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string ProfilesPage_Cancel {
            get {
                return ResourceManager.GetString("ProfilesPage_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new profile.
        /// </summary>
        public static string ProfilesPage_CreateNewProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_CreateNewProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string ProfilesPage_Delete {
            get {
                return ResourceManager.GetString("ProfilesPage_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete profile.
        /// </summary>
        public static string ProfilesPage_DeleteProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_DeleteProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable profile.
        /// </summary>
        public static string ProfilesPage_EnableProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_EnableProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The profile will be automatically applied when the associated application is detected.
        /// </summary>
        public static string ProfilesPage_EnableProfileDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_EnableProfileDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global settings.
        /// </summary>
        public static string ProfilesPage_GlobalSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_GlobalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the global profiles settings.
        /// </summary>
        public static string ProfilesPage_GlobalSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GlobalSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gyrometer multiplier.
        /// </summary>
        public static string ProfilesPage_GyrometerMultiplier {
            get {
                return ResourceManager.GetString("ProfilesPage_GyrometerMultiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the system reported gyrometer value.
        /// </summary>
        public static string ProfilesPage_GyrometerMultiplierDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GyrometerMultiplierDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gyro steering axis.
        /// </summary>
        public static string ProfilesPage_GyroSteeringAxis {
            get {
                return ResourceManager.GetString("ProfilesPage_GyroSteeringAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For controlling the horizontal movement of the controller, you can use either the yaw or roll axis.
        /// </summary>
        public static string ProfilesPage_GyroSteeringAxisDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_GyroSteeringAxisDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert horizontal axis.
        /// </summary>
        public static string ProfilesPage_InvertHorizontalAxis {
            get {
                return ResourceManager.GetString("ProfilesPage_InvertHorizontalAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert vertical axis.
        /// </summary>
        public static string ProfilesPage_InvertVerticalAxis {
            get {
                return ResourceManager.GetString("ProfilesPage_InvertVerticalAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Motion control settings.
        /// </summary>
        public static string ProfilesPage_MotionControlSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_MotionControlSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the global motion control settings.
        /// </summary>
        public static string ProfilesPage_MotionControlSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_MotionControlSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string ProfilesPage_OK {
            get {
                return ResourceManager.GetString("ProfilesPage_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power settings.
        /// </summary>
        public static string ProfilesPage_PowerSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_PowerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the power settings.
        /// </summary>
        public static string ProfilesPage_PowerSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_PowerSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile details.
        /// </summary>
        public static string ProfilesPage_ProfileDetails {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile name.
        /// </summary>
        public static string ProfilesPage_ProfileName {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile path.
        /// </summary>
        public static string ProfilesPage_ProfilePath {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profiles.
        /// </summary>
        public static string ProfilesPage_Profiles {
            get {
                return ResourceManager.GetString("ProfilesPage_Profiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile selection.
        /// </summary>
        public static string ProfilesPage_ProfileSelection {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the profile you would like to edit.
        /// </summary>
        public static string ProfilesPage_ProfileSelectionDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileSelectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile settings.
        /// </summary>
        public static string ProfilesPage_ProfileSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile updated.
        /// </summary>
        public static string ProfilesPage_ProfileUpdated1 {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileUpdated1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to was updated..
        /// </summary>
        public static string ProfilesPage_ProfileUpdated2 {
            get {
                return ResourceManager.GetString("ProfilesPage_ProfileUpdated2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roll.
        /// </summary>
        public static string ProfilesPage_Roll {
            get {
                return ResourceManager.GetString("ProfilesPage_Roll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X.
        /// </summary>
        public static string ProfilesPage_SensitivityX {
            get {
                return ResourceManager.GetString("ProfilesPage_SensitivityX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Y.
        /// </summary>
        public static string ProfilesPage_SensitivityY {
            get {
                return ResourceManager.GetString("ProfilesPage_SensitivityY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style of input.
        /// </summary>
        public static string ProfilesPage_StyleofInput {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The physical inputs of the controller can be programmed to act like different types of devices.
        /// </summary>
        public static string ProfilesPage_StyleofInputTooltip {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output device.
        /// </summary>
        public static string ProfilesPage_StyleofOutput {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the device that will receive the motion commands.
        /// </summary>
        public static string ProfilesPage_StyleofOutputTooltip {
            get {
                return ResourceManager.GetString("ProfilesPage_StyleofOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sustained power limit.
        /// </summary>
        public static string ProfilesPage_SustainedPower {
            get {
                return ResourceManager.GetString("ProfilesPage_SustainedPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change sustained thermal power limit.
        /// </summary>
        public static string ProfilesPage_SustainedPowerDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_SustainedPowerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thermal Power (TDP) Override.
        /// </summary>
        public static string ProfilesPage_TDPOverride {
            get {
                return ResourceManager.GetString("ProfilesPage_TDPOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override the processor thermal power limit.
        /// </summary>
        public static string ProfilesPage_TDPOverrideDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_TDPOverrideDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable universal motion controler.
        /// </summary>
        public static string ProfilesPage_UMCEnable {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled, turn on with button(s).
        /// </summary>
        public static string ProfilesPage_UMCMotionOff {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled, turn off with button(s).
        /// </summary>
        public static string ProfilesPage_UMCMotionOn {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Motion activation.
        /// </summary>
        public static string ProfilesPage_UMCMotionOnOff {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOnOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With motion input disabled, use selected button(s) to enable motion, 
        ///with motion input enabled, use selected button(s) to disable motion..
        /// </summary>
        public static string ProfilesPage_UMCMotionOnOffDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCMotionOnOffDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the device that will receive the motion commands.
        /// </summary>
        public static string ProfilesPage_UMCSelectionRightLeftDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCSelectionRightLeftDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Universal motion control settings.
        /// </summary>
        public static string ProfilesPage_UMCSettings {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translate device motions into controller inputs.
        /// </summary>
        public static string ProfilesPage_UMCSettingsDesc {
            get {
                return ResourceManager.GetString("ProfilesPage_UMCSettingsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update profile.
        /// </summary>
        public static string ProfilesPage_UpdateProfile {
            get {
                return ResourceManager.GetString("ProfilesPage_UpdateProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow the application to access device physical controller.
        /// </summary>
        public static string ProfilesPage_Whitelist {
            get {
                return ResourceManager.GetString("ProfilesPage_Whitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translates DirectInput calls to XInput calls.
        /// </summary>
        public static string ProfilesPage_Wrapper {
            get {
                return ResourceManager.GetString("ProfilesPage_Wrapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yaw.
        /// </summary>
        public static string ProfilesPage_Yaw {
            get {
                return ResourceManager.GetString("ProfilesPage_Yaw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string ProfilesPage_Yes {
            get {
                return ResourceManager.GetString("ProfilesPage_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.Resources.ControllerPage_Disconnect.
        /// </summary>
        public static string Properties_Resources_ControllerPage_Disconnect {
            get {
                return ResourceManager.GetString("Properties.Resources.ControllerPage_Disconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual GPU Clock Control.
        /// </summary>
        public static string QuickPerformancePage_GPUControl {
            get {
                return ResourceManager.GetString("QuickPerformancePage_GPUControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the GPU to a fixed clock.
        /// </summary>
        public static string QuickPerformancePage_GPUControlDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_GPUControlDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  MHz.
        /// </summary>
        public static string QuickPerformancePage_GPUUnit {
            get {
                return ResourceManager.GetString("QuickPerformancePage_GPUUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power mode.
        /// </summary>
        public static string QuickPerformancePage_PowerMode {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Balanced.
        /// </summary>
        public static string QuickPerformancePage_PowerModeBalanced {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModeBalanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optimize your device based on power use and performance.
        /// </summary>
        public static string QuickPerformancePage_PowerModeDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Efficiency.
        /// </summary>
        public static string QuickPerformancePage_PowerModeEfficiency {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModeEfficiency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performance.
        /// </summary>
        public static string QuickPerformancePage_PowerModePerformance {
            get {
                return ResourceManager.GetString("QuickPerformancePage_PowerModePerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boost.
        /// </summary>
        public static string QuickPerformancePage_TDPBoost {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPBoost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thermal Power (TDP) Limit.
        /// </summary>
        public static string QuickPerformancePage_TDPLimit {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limits processor power for less total power.
        /// </summary>
        public static string QuickPerformancePage_TDPLimitDesc {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPLimitDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thermal Power Limit is overwritten by a profile.
        /// </summary>
        public static string QuickPerformancePage_TDPOverWrittenWarning {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPOverWrittenWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sustained.
        /// </summary>
        public static string QuickPerformancePage_TDPSustained {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPSustained", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  W.
        /// </summary>
        public static string QuickPerformancePage_TDPUnitWatt {
            get {
                return ResourceManager.GetString("QuickPerformancePage_TDPUnitWatt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create profile.
        /// </summary>
        public static string QuickProfilesPage_Create {
            get {
                return ResourceManager.GetString("QuickProfilesPage_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for foreground process....
        /// </summary>
        public static string QuickProfilesPage_Waiting {
            get {
                return ResourceManager.GetString("QuickProfilesPage_Waiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides gyroscope and accelerometer support to Windows handheld gaming computers through a virtual controller. If the service is enabled, embedded controller will be cloaked to applications outside the whitelist. If the service is disabled, embedded controller will be uncloaked and the virtual controller disabled..
        /// </summary>
        public static string ServiceDescription {
            get {
                return ResourceManager.GetString("ServiceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller Service.
        /// </summary>
        public static string ServiceName {
            get {
                return ResourceManager.GetString("ServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string SettingsPage_AppLanguage {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application language.
        /// </summary>
        public static string SettingsPage_AppLanguageDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguageDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart required.
        /// </summary>
        public static string SettingsPage_AppLanguageWarning {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguageWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order for the changes to take effect, please restart the application.
        /// </summary>
        public static string SettingsPage_AppLanguageWarningDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AppLanguageWarningDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application theme.
        /// </summary>
        public static string SettingsPage_AppTheme {
            get {
                return ResourceManager.GetString("SettingsPage_AppTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application theme, light or dark mode.
        /// </summary>
        public static string SettingsPage_AppThemeDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AppThemeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-start application.
        /// </summary>
        public static string SettingsPage_AutoStartApp {
            get {
                return ResourceManager.GetString("SettingsPage_AutoStartApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application will start automatically when I sign in to Windows.
        /// </summary>
        public static string SettingsPage_AutoStartAppDesc {
            get {
                return ResourceManager.GetString("SettingsPage_AutoStartAppDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Acrylic backdrop.
        /// </summary>
        public static string SettingsPage_Backdrop {
            get {
                return ResourceManager.GetString("SettingsPage_Backdrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acrylic.
        /// </summary>
        public static string SettingsPage_BackdropAcrylic {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropAcrylic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application will use acrylic backdrop.
        /// </summary>
        public static string SettingsPage_BackdropDesc {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mica.
        /// </summary>
        public static string SettingsPage_BackdropMica {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropMica", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string SettingsPage_BackdropNone {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tabbed.
        /// </summary>
        public static string SettingsPage_BackdropTabbed {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropTabbed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for updates.
        /// </summary>
        public static string SettingsPage_CheckForUpdates {
            get {
                return ResourceManager.GetString("SettingsPage_CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close minimizes.
        /// </summary>
        public static string SettingsPage_CloseMinimizes {
            get {
                return ResourceManager.GetString("SettingsPage_CloseMinimizes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application will be minimized instead of closed.
        /// </summary>
        public static string SettingsPage_CloseMinimizesDesc {
            get {
                return ResourceManager.GetString("SettingsPage_CloseMinimizesDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download.
        /// </summary>
        public static string SettingsPage_Download {
            get {
                return ResourceManager.GetString("SettingsPage_Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading - .
        /// </summary>
        public static string SettingsPage_DownloadingPercentage {
            get {
                return ResourceManager.GetString("SettingsPage_DownloadingPercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EcoQoS.
        /// </summary>
        public static string SettingsPage_EcoQoS {
            get {
                return ResourceManager.GetString("SettingsPage_EcoQoS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Throttle inactive or background processes and applications to improve energy efficency.
        /// </summary>
        public static string SettingsPage_EcoQoSDesc {
            get {
                return ResourceManager.GetString("SettingsPage_EcoQoSDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General options.
        /// </summary>
        public static string SettingsPage_GeneralOptions {
            get {
                return ResourceManager.GetString("SettingsPage_GeneralOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Halt with Companion.
        /// </summary>
        public static string SettingsPage_HaltWithCompanion {
            get {
                return ResourceManager.GetString("SettingsPage_HaltWithCompanion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically turn off service when companion is closed.
        /// </summary>
        public static string SettingsPage_HaltWithCompanionDesc {
            get {
                return ResourceManager.GetString("SettingsPage_HaltWithCompanionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install now.
        /// </summary>
        public static string SettingsPage_InstallNow {
            get {
                return ResourceManager.GetString("SettingsPage_InstallNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last checked: .
        /// </summary>
        public static string SettingsPage_LastChecked {
            get {
                return ResourceManager.GetString("SettingsPage_LastChecked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notification options.
        /// </summary>
        public static string SettingsPage_NotificationOptions {
            get {
                return ResourceManager.GetString("SettingsPage_NotificationOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open application in background.
        /// </summary>
        public static string SettingsPage_OpenAppBackground {
            get {
                return ResourceManager.GetString("SettingsPage_OpenAppBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application will initially start minimized and appear on the taskbar.
        /// </summary>
        public static string SettingsPage_OpenAppBackgroundDesc {
            get {
                return ResourceManager.GetString("SettingsPage_OpenAppBackgroundDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External.
        /// </summary>
        public static string SettingsPage_SensorExternal {
            get {
                return ResourceManager.GetString("SettingsPage_SensorExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal.
        /// </summary>
        public static string SettingsPage_SensorInternal {
            get {
                return ResourceManager.GetString("SettingsPage_SensorInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensor options.
        /// </summary>
        public static string SettingsPage_SensorOptions {
            get {
                return ResourceManager.GetString("SettingsPage_SensorOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External sensor placement direction.
        /// </summary>
        public static string SettingsPage_SensorPlacementDirection {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select on which side of the device the senor has been mounted.
        /// </summary>
        public static string SettingsPage_SensorPlacementDirectionDesc {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementDirectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External sensor upside down.
        /// </summary>
        public static string SettingsPage_SensorPlacementUpsideDown {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementUpsideDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensor has been mounted upside down, possible with USB-C convertor.
        /// </summary>
        public static string SettingsPage_SensorPlacementUpsideDownDesc {
            get {
                return ResourceManager.GetString("SettingsPage_SensorPlacementUpsideDownDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensor selection.
        /// </summary>
        public static string SettingsPage_SensorSelection {
            get {
                return ResourceManager.GetString("SettingsPage_SensorSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the desired sensor used for motion input.
        /// </summary>
        public static string SettingsPage_SensorSelectionDesc {
            get {
                return ResourceManager.GetString("SettingsPage_SensorSelectionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service options.
        /// </summary>
        public static string SettingsPage_ServiceOptions {
            get {
                return ResourceManager.GetString("SettingsPage_ServiceOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string SettingsPage_Settings {
            get {
                return ResourceManager.GetString("SettingsPage_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup type.
        /// </summary>
        public static string SettingsPage_StartupType {
            get {
                return ResourceManager.GetString("SettingsPage_StartupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used by the service manager to define the service startup type.
        /// </summary>
        public static string SettingsPage_StartupTypeDesc {
            get {
                return ResourceManager.GetString("SettingsPage_StartupTypeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start with Companion.
        /// </summary>
        public static string SettingsPage_StartWithCompanion {
            get {
                return ResourceManager.GetString("SettingsPage_StartWithCompanion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically turn on service when companion starts.
        /// </summary>
        public static string SettingsPage_StartWithCompanionDesc {
            get {
                return ResourceManager.GetString("SettingsPage_StartWithCompanionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Power.
        /// </summary>
        public static string SettingsPage_TDPMax {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum power in watts supplied to the processor.
        /// </summary>
        public static string SettingsPage_TDPMaxDesc {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMaxDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Power.
        /// </summary>
        public static string SettingsPage_TDPMin {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum power in watts supplied to the processor.
        /// </summary>
        public static string SettingsPage_TDPMinDesc {
            get {
                return ResourceManager.GetString("SettingsPage_TDPMinDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configurable Power (cTDP) override.
        /// </summary>
        public static string SettingsPage_TDPRangeOverride {
            get {
                return ResourceManager.GetString("SettingsPage_TDPRangeOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows to modify the minimum and maximum power values (TDP) beyond the CPU specifications.
        /// </summary>
        public static string SettingsPage_TDPRangeOverrideDesc {
            get {
                return ResourceManager.GetString("SettingsPage_TDPRangeOverrideDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark.
        /// </summary>
        public static string SettingsPage_ThemeDark {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        public static string SettingsPage_ThemeLight {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toast notification.
        /// </summary>
        public static string SettingsPage_ToastNotification {
            get {
                return ResourceManager.GetString("SettingsPage_ToastNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get notifications from the application in the Windows action center.
        /// </summary>
        public static string SettingsPage_ToastNotificationDesc {
            get {
                return ResourceManager.GetString("SettingsPage_ToastNotificationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates available.
        /// </summary>
        public static string SettingsPage_UpdateAvailable {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for updates....
        /// </summary>
        public static string SettingsPage_UpdateCheck {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We couldn&apos;t download the update file..
        /// </summary>
        public static string SettingsPage_UpdateFailedDownload {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateFailedDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We couldn&apos;t reach github..
        /// </summary>
        public static string SettingsPage_UpdateFailedGithub {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateFailedGithub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We couldn&apos;t locate the update file..
        /// </summary>
        public static string SettingsPage_UpdateFailedInstall {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateFailedInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oups. There was an issue..
        /// </summary>
        public static string SettingsPage_UpdateWarning {
            get {
                return ResourceManager.GetString("SettingsPage_UpdateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re up to date.
        /// </summary>
        public static string SettingsPage_UpToDate {
            get {
                return ResourceManager.GetString("SettingsPage_UpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller is now cloaked and inputs forwarded to virtual controller.
        /// </summary>
        public static string ToastNewControllerEx {
            get {
                return ResourceManager.GetString("ToastNewControllerEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User.
        /// </summary>
        public static string User {
            get {
                return ResourceManager.GetString("User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run this tool as Administrator to unlock these settings.
        /// </summary>
        public static string WarningElevated {
            get {
                return ResourceManager.GetString("WarningElevated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] xinput1_x64 {
            get {
                object obj = ResourceManager.GetObject("xinput1_x64", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] xinput1_x86 {
            get {
                object obj = ResourceManager.GetObject("xinput1_x86", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [General]
        ///iniFileVersion=4150
        ///[KeyAssign]
        ///LS=LS
        ///RS=RS
        ///LT=LT
        ///RT=RT
        ///DPAD_UP=DPAD_UP
        ///DPAD_DOWN=DPAD_DOWN
        ///DPAD_LEFT=DPAD_LEFT
        ///DPAD_RIGHT=DPAD_RIGHT
        ///A=A
        ///B=B
        ///X=X
        ///Y=Y
        ///LB=LB
        ///RB=RB
        ///LSB=LSB
        ///RSB=RSB
        ///BACK=BACK
        ///START=START
        ///GUIDE=GUIDE
        ///ThresholdA2D=40
        ///DPAD4Direction=False
        ///[LeftStick]
        ///DeadZone=0
        ///Saturation=32767
        ///Linearity=1
        ///Response=32767
        ///RectCorrection=0
        ///Scale=1
        ///CenterOffsetX=0
        ///CenterOffsetY=0
        ///InvertX=False
        ///InvertY=False
        ///DisableX=False
        ///DisableY=False
        ///[RightStick]
        ///DeadZone=0
        ///Saturati [rest of string was truncated]&quot;;.
        /// </summary>
        public static string XInputPlus {
            get {
                return ResourceManager.GetString("XInputPlus", resourceCulture);
            }
        }
    }
}
