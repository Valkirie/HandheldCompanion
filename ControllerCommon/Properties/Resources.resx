<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoRollYawSwapDesc" xml:space="preserve">
    <value>This input will operate as a simple joystick. Ideal for laptop and clamshell type handhelds, automatic yaw roll swap based on how device is being held (90 or 180 degree open).</value>
  </data>
  <data name="Enum.AYANEO2.ButtonFlags.OEM1" xml:space="preserve">
    <value>AYA</value>
  </data>
  <data name="Enum.AYANEO2.ButtonFlags.OEM2" xml:space="preserve">
    <value>≈</value>
  </data>
  <data name="Enum.AYANEO2.ButtonFlags.OEM3" xml:space="preserve">
    <value>RC</value>
  </data>
  <data name="Enum.AYANEO2.ButtonFlags.OEM4" xml:space="preserve">
    <value>LC</value>
  </data>
  <data name="Enum.AYANEOAIR.ButtonFlags.OEM1" xml:space="preserve">
    <value>AYA</value>
  </data>
  <data name="Enum.AYANEOAIR.ButtonFlags.OEM2" xml:space="preserve">
    <value>≈</value>
  </data>
  <data name="Enum.AYANEOAIR.ButtonFlags.OEM3" xml:space="preserve">
    <value>RC</value>
  </data>
  <data name="Enum.AYANEOAIR.ButtonFlags.OEM4" xml:space="preserve">
    <value>LC</value>
  </data>
  <data name="Enum.AYANEOAIRLite.ButtonFlags.OEM1" xml:space="preserve">
    <value>AYA</value>
  </data>
  <data name="Enum.AYANEOAIRLite.ButtonFlags.OEM2" xml:space="preserve">
    <value>≈</value>
  </data>
  <data name="Enum.AYANEOAIRLite.ButtonFlags.OEM3" xml:space="preserve">
    <value>RC</value>
  </data>
  <data name="Enum.AYANEOAIRLite.ButtonFlags.OEM4" xml:space="preserve">
    <value>LC</value>
  </data>
  <data name="Enum.AYANEOAIRPro.ButtonFlags.OEM1" xml:space="preserve">
    <value>AYA</value>
  </data>
  <data name="Enum.AYANEOAIRPro.ButtonFlags.OEM2" xml:space="preserve">
    <value>≈</value>
  </data>
  <data name="Enum.AYANEOAIRPro.ButtonFlags.OEM3" xml:space="preserve">
    <value>RC</value>
  </data>
  <data name="Enum.AYANEOAIRPro.ButtonFlags.OEM4" xml:space="preserve">
    <value>LC</value>
  </data>
  <data name="Enum.DS4Controller.ButtonFlags.B1" xml:space="preserve">
    <value>Cross</value>
  </data>
  <data name="Enum.DS4Controller.ButtonFlags.B2" xml:space="preserve">
    <value>Circle</value>
  </data>
  <data name="Enum.DS4Controller.ButtonFlags.B3" xml:space="preserve">
    <value>Square</value>
  </data>
  <data name="Enum.DS4Controller.ButtonFlags.B4" xml:space="preserve">
    <value>Triangle</value>
  </data>
  <data name="Enum.DS4Controller.ButtonFlags.Back" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="Enum.DS4Controller.ButtonFlags.Special" xml:space="preserve">
    <value>Sony</value>
  </data>
  <data name="Enum.DS4Controller.ButtonFlags.Start" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Enum.HIDmode.DualShock4Controller" xml:space="preserve">
    <value>Emulated DualShock 4 controller</value>
  </data>
  <data name="Enum.HIDmode.NoController" xml:space="preserve">
    <value>No emulated controller</value>
  </data>
  <data name="Enum.HIDmode.Xbox360Controller" xml:space="preserve">
    <value>Emulated XBOX 360 controller</value>
  </data>
  <data name="Enum.HIDstatus.Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="Enum.HIDstatus.Disconnected" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="Enum.Input.AutoRollYawSwap" xml:space="preserve">
    <value>Auto Roll Yaw Swap</value>
  </data>
  <data name="Enum.Input.JoystickCamera" xml:space="preserve">
    <value>Joystick camera</value>
  </data>
  <data name="Enum.Input.JoystickSteering" xml:space="preserve">
    <value>Joystick steering</value>
  </data>
  <data name="Enum.Input.PlayerSpace" xml:space="preserve">
    <value>Player space</value>
  </data>
  <data name="Enum.InputsHotkeyType.HC" xml:space="preserve">
    <value>Handheld Companion</value>
  </data>
  <data name="Enum.InputsHotkeyType.Overlay" xml:space="preserve">
    <value>Overlay</value>
  </data>
  <data name="Enum.InputsHotkeyType.Quicktools" xml:space="preserve">
    <value>Quick tools</value>
  </data>
  <data name="Enum.InputsHotkeyType.Windows" xml:space="preserve">
    <value>Windows</value>
  </data>
  <data name="Enum.NeptuneController.ButtonFlags.B1" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="Enum.NeptuneController.ButtonFlags.B2" xml:space="preserve">
    <value>B</value>
  </data>
  <data name="Enum.NeptuneController.ButtonFlags.B3" xml:space="preserve">
    <value>X</value>
  </data>
  <data name="Enum.NeptuneController.ButtonFlags.B4" xml:space="preserve">
    <value>Y</value>
  </data>
  <data name="Enum.NeptuneController.ButtonFlags.Back" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Enum.NeptuneController.ButtonFlags.Start" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="Enum.Output.LeftStick" xml:space="preserve">
    <value>Left joystick</value>
  </data>
  <data name="Enum.Output.RightStick" xml:space="preserve">
    <value>Right joystick</value>
  </data>
  <data name="Enum.ProfileErrorCode.Default" xml:space="preserve">
    <value>This is your default controller profile. This profile will be applied for all your applications that do not have a specific profile. Some options requiring an executable might be disabled.</value>
  </data>
  <data name="Enum.ProfileErrorCode.MissingExecutable" xml:space="preserve">
    <value>Oops. It seems this profile does not have an executable. How is this even possible?</value>
  </data>
  <data name="Enum.ProfileErrorCode.MissingPath" xml:space="preserve">
    <value>Oops. It seems this profile does not have a path to the application. Some options requiring an executable might be disabled.</value>
  </data>
  <data name="Enum.ProfileErrorCode.MissingPermission" xml:space="preserve">
    <value>Oops. It seems you do not have the necessary permission level to modify the content of this application. Make sure you have started this program in administrator mode.</value>
  </data>
  <data name="Enum.ProfileErrorCode.None" xml:space="preserve">
    <value>Nothing to see here.</value>
  </data>
  <data name="Enum.ProfileErrorCode.Running" xml:space="preserve">
    <value>Oops. It seems this profile excutable is running. Some options requiring an executable might be disabled.</value>
  </data>
  <data name="Enum.QualityOfServiceLevel.Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Enum.QualityOfServiceLevel.Eco" xml:space="preserve">
    <value>Eco</value>
  </data>
  <data name="Enum.QualityOfServiceLevel.High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="Enum.ServiceStartMode.Automatic" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="Enum.ServiceStartMode.Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="Enum.ServiceStartMode.Manual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="Enum.XInputController.ButtonFlags.B1" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="Enum.XInputController.ButtonFlags.B2" xml:space="preserve">
    <value>B</value>
  </data>
  <data name="Enum.XInputController.ButtonFlags.B3" xml:space="preserve">
    <value>X</value>
  </data>
  <data name="Enum.XInputController.ButtonFlags.B4" xml:space="preserve">
    <value>Y</value>
  </data>
  <data name="Enum.XInputController.ButtonFlags.Back" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Enum.XInputController.ButtonFlags.L1" xml:space="preserve">
    <value>LB</value>
  </data>
  <data name="Enum.XInputController.ButtonFlags.R1" xml:space="preserve">
    <value>RB</value>
  </data>
  <data name="Enum.XInputController.ButtonFlags.Special" xml:space="preserve">
    <value>Guide</value>
  </data>
  <data name="Enum.XInputController.ButtonFlags.Start" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="JoystickCameraDesc" xml:space="preserve">
    <value>This input will operate as a simple joystick. This is intended for traditional joystick applications</value>
  </data>
  <data name="JoystickSteeringDesc" xml:space="preserve">
    <value>This input will operate as a joystick optimized for controlling a steering wheel or a racing game</value>
  </data>
  <data name="PlayerSpaceDesc" xml:space="preserve">
    <value>This input will operate as a joystick optimized for controlling a first or third person camera</value>
  </data>
  <data name="Enum.InputsHotkeyType.Handheld" xml:space="preserve">
    <value>Handheld Companion</value>
  </data>
  <data name="Enum.SteamDeck.ButtonFlags.OEM1" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Enum.NeptuneController.ButtonFlags.Special" xml:space="preserve">
    <value>STEAM</value>
  </data>
  <data name="Enum.ROGAlly.ButtonFlags.OEM1" xml:space="preserve">
    <value>Command center</value>
  </data>
  <data name="Enum.ROGAlly.ButtonFlags.OEM2" xml:space="preserve">
    <value>Armory crate</value>
  </data>
  <data name="Enum.ROGAlly.ButtonFlags.OEM3" xml:space="preserve">
    <value>M1 / M2</value>
  </data>
</root>