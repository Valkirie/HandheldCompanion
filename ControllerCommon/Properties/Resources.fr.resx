<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoRollYawSwapDesc" xml:space="preserve">
    <value>This input will operate as a simple joystick. Ideal for laptop and clamshell type handhelds, automatic yaw roll swap based on how device is being held (90 or 180 degree open).</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.A" xml:space="preserve">
    <value>Bouton A</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.AlwaysOn" xml:space="preserve">
    <value>Toujours activé</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.B" xml:space="preserve">
    <value>Bouton B</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.Back" xml:space="preserve">
    <value>Retour</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.DPadDown" xml:space="preserve">
    <value>DPAD - Bas</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.DPadLeft" xml:space="preserve">
    <value>DPAD - Gauche</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.DPadRight" xml:space="preserve">
    <value>DPAD - Droit</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.DPadUp" xml:space="preserve">
    <value>DPAD - Bas</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.LeftShoulder" xml:space="preserve">
    <value>Gâchette haute gauche</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.LeftThumb" xml:space="preserve">
    <value>Clic stick gauche</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.LeftTrigger" xml:space="preserve">
    <value>Gâchette gauche</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.RightShoulder" xml:space="preserve">
    <value>Gâchette haute droite</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.RightThumb" xml:space="preserve">
    <value>Clic stick droit</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.RightTrigger" xml:space="preserve">
    <value>Gâchette droite</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.Start" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.X" xml:space="preserve">
    <value>Bouton X</value>
  </data>
  <data name="Enum.GamepadButtonFlagsExt.Y" xml:space="preserve">
    <value>Bouton Y</value>
  </data>
  <data name="Enum.HIDmode.DualShock4Controller" xml:space="preserve">
    <value>Contrôleur DualShock 4 émulé</value>
  </data>
  <data name="Enum.HIDmode.NoController" xml:space="preserve">
    <value>Aucun contrôleur émulé</value>
  </data>
  <data name="Enum.HIDmode.Xbox360Controller" xml:space="preserve">
    <value>Contrôleur XBOX 360 émulé</value>
  </data>
  <data name="Enum.HIDstatus.Connected" xml:space="preserve">
    <value>Connecté</value>
  </data>
  <data name="Enum.HIDstatus.Disconnected" xml:space="preserve">
    <value>Déconnecté</value>
  </data>
  <data name="Enum.Input.AutoRollYawSwap" xml:space="preserve">
    <value>Auto Roll Yaw Swap</value>
  </data>
  <data name="Enum.Input.JoystickCamera" xml:space="preserve">
    <value>Caméra joystick</value>
  </data>
  <data name="Enum.Input.JoystickSteering" xml:space="preserve">
    <value>Conduite par joystick</value>
  </data>
  <data name="Enum.Input.PlayerSpace" xml:space="preserve">
    <value>Player space</value>
    <comment>A traduire...</comment>
  </data>
  <data name="Enum.Output.LeftStick" xml:space="preserve">
    <value>Joystick gauche</value>
  </data>
  <data name="Enum.Output.RightStick" xml:space="preserve">
    <value>Joystick droit</value>
  </data>
  <data name="Enum.ProfileErrorCode.IsDefault" xml:space="preserve">
    <value>Il s'agit de votre profil de contrôleur par défaut. Ce profil sera appliqué pour toutes vos applications qui n'ont pas de profil spécifique. Certaines options nécessitant un exécutable peuvent être désactivées.</value>
  </data>
  <data name="Enum.ProfileErrorCode.IsRunning" xml:space="preserve">
    <value>Oups. Il semble que ce profil soit en cours d'exécution. Certaines options nécessitant un exécutable pourraient être désactivées.</value>
  </data>
  <data name="Enum.ProfileErrorCode.MissingExecutable" xml:space="preserve">
    <value>Oups. Il semble que ce profil n'ait pas d'exécutable. Comment cela est-il possible ?</value>
  </data>
  <data name="Enum.ProfileErrorCode.MissingPath" xml:space="preserve">
    <value>Oups. Il semble que ce profil ne dispose pas d'un chemin vers l'application. Certaines options nécessitant un exécutable pourraient être désactivées.</value>
  </data>
  <data name="Enum.ProfileErrorCode.MissingPermission" xml:space="preserve">
    <value>Oups. Il semble que vous n'ayez pas le niveau de permission nécessaire pour modifier le contenu de cette application. Assurez-vous que vous avez lancé ce programme en mode administrateur.</value>
  </data>
  <data name="Enum.ProfileErrorCode.None" xml:space="preserve">
    <value>Rien à voir ici.</value>
  </data>
  <data name="Enum.ServiceStartMode.Automatic" xml:space="preserve">
    <value>Automatique</value>
  </data>
  <data name="Enum.ServiceStartMode.Disabled" xml:space="preserve">
    <value>Désactivé</value>
  </data>
  <data name="Enum.ServiceStartMode.Manual" xml:space="preserve">
    <value>Manuel</value>
  </data>
  <data name="JoystickCameraDesc" xml:space="preserve">
    <value>Cette entrée fonctionnera comme un simple joystick. Elle est destinée aux applications traditionnelles de joystick</value>
  </data>
  <data name="JoystickSteeringDesc" xml:space="preserve">
    <value>Cette entrée fonctionnera comme un joystick optimisé pour le contrôle d'un volant ou d'un jeu de course.</value>
  </data>
  <data name="PlayerSpaceDesc" xml:space="preserve">
    <value>Cette entrée fonctionnera comme un joystick optimisé pour le contrôle d'une caméra à la première ou à la troisième personne.</value>
  </data>
</root>